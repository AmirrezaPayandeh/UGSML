<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="UGSMLGraphicalEditor" version="12.0.0.2017041100">
  <ownedViewpoints name="UGSMLViewpoint">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="MainDiagram" domainClass="UGSML::Root" enablePopupBars="true">
      <metamodel href="../../UGSML/model/UGSML.ecore#/"/>
      <defaultLayer name="MainLayer">
        <containerMappings name="GameContainer" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnGameContainerDoubleClicked']" domainClass="UGSML::Game">
          <subContainerMappings name="GameStructureContainer" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnStructureContainerDoubleClicked']" domainClass="UGSML::GameStructureContainer" childrenPresentation="VerticalStack">
            <subContainerMappings name="SimpleEnumStructureContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnGameStructureDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnSimpleEnumStructureDoubleClicked']" domainClass="UGSML::SimpleEnumStructure" childrenPresentation="List">
              <subNodeMappings name="EnumStateNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnSimpleEnumStateDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnSimpleEnumStateDoubleClicked']" domainClass="UGSML::EnumState">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Enumeration.png" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor2']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
              </style>
            </subContainerMappings>
            <subContainerMappings name="BitmaskedEnumStructureContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnGameStructureDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnBitmaskedEnumStructureDoubleClicked']" domainClass="UGSML::BitmaskedEnumStructure" childrenPresentation="List">
              <subNodeMappings name="EnumStateNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnBitmaskedEnumStateDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnBitmaskedEnumStateDoubleClicked']" domainClass="UGSML::EnumState">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Enumeration.png" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor2']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
              </style>
            </subContainerMappings>
            <subContainerMappings name="DataBasedStructureContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnGameStructureDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureDoubleClicked']" domainClass="UGSML::DataBasedStructure" childrenPresentation="List">
              <subNodeMappings name="DecimalBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnDecimalAttriubteDoubleClicked']" domainClass="UGSML::DecimalBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DecimalSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="IntegerBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnIntegerAttriubteDoubleClicked']" domainClass="UGSML::IntegerBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/IntegerSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="BooleanBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnBooleanAttriubteDoubleClicked']" domainClass="UGSML::BooleanBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/BooleanSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="CharacterBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnCharacterAttriubteDoubleClicked']" domainClass="UGSML::CharacterBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/CharacterSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="NameBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnNameAttriubteDoubleClicked']" domainClass="UGSML::NameBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/NameSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="StringBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnStringAttriubteDoubleClicked']" domainClass="UGSML::StringBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StringSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="TextBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTextAttriubteDoubleClicked']" domainClass="UGSML::TextBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="Vector2DBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnVector2DAttriubteDoubleClicked']" domainClass="UGSML::Vector2DBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/Vector2DSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="VectorBasedAttributeNode" preconditionExpression="aql:self.TOwningTransformation->isEmpty() and self.SOwningTransformation->isEmpty()" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnVectorAttriubteDoubleClicked']" domainClass="UGSML::VectorBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/VectorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="RotatorBasedAttributeNode" preconditionExpression="aql:self.ROwningTransformation->isEmpty()" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnRotatorAttriubteDoubleClicked']" domainClass="UGSML::RotatorBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/RotatorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="TransformationBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTransformationAttriubteDoubleClicked']" domainClass="UGSML::TransformationBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TransformationSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ColorBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnColorAttriubteDoubleClicked']" domainClass="UGSML::ColorBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ColorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="TextureBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTextureAttriubteDoubleClicked']" domainClass="UGSML::TextureBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ModelBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnModelAttriubteDoubleClicked']" domainClass="UGSML::ModelBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ModelSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ParticleBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnParticleAttriubteDoubleClicked']" domainClass="UGSML::ParticleBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ParticleSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="AudioBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAudioAttriubteDoubleClicked']" domainClass="UGSML::AudioBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/AudioSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="MaterialBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnMaterialAttriubteDoubleClicked']" domainClass="UGSML::MaterialBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/MaterialSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="EnumBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnEnumAttriubteDoubleClicked']" domainClass="UGSML::EnumBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="StructureBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnStructureAttriubteDoubleClicked']" domainClass="UGSML::StructureBasedAttribute">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StructureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Structure.png" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor2']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="13" labelExpression="aql:self.FeatureCategory" iconPath="/UGSMLGraphicalEditor/Icons/Container/StructureContainer.png" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='StructureContainerColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="GameAttributeContainer" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnAttributeContainerDoubleClicked']" domainClass="UGSML::GameAttributeContainer" childrenPresentation="List">
            <subNodeMappings name="IntegerBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnIntegerAttriubteDoubleClicked']" domainClass="UGSML::IntegerBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/IntegerSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/IntegerSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="DecimalBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnDecimalAttriubteDoubleClicked']" domainClass="UGSML::DecimalBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DecimalSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DecimalSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="BooleanBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnBooleanAttriubteDoubleClicked']" domainClass="UGSML::BooleanBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/BooleanSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/BooleanSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="CharacterBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnCharacterAttriubteDoubleClicked']" domainClass="UGSML::CharacterBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/CharacterSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/CharacterSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="NameBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnNameAttriubteDoubleClicked']" domainClass="UGSML::NameBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/NameSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/NameSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="StringBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnStringAttriubteDoubleClicked']" domainClass="UGSML::StringBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StringSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StringSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="TextBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTextAttriubteDoubleClicked']" domainClass="UGSML::TextBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="Vector2DBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnVector2DAttriubteDoubleClicked']" domainClass="UGSML::Vector2DBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/Vector2DSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/Vector2DSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="VectorBasedAttributeNode" preconditionExpression="aql:self.TOwningTransformation->isEmpty() and self.SOwningTransformation->isEmpty()" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnVectorAttriubteDoubleClicked']" domainClass="UGSML::VectorBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/VectorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/VectorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="RotatorBasedAttributeNode" preconditionExpression="aql:self.ROwningTransformation->isEmpty()" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnRotatorAttriubteDoubleClicked']" domainClass="UGSML::RotatorBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/RotatorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/RotatorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="TransformationBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTransformationAttriubteDoubleClicked']" domainClass="UGSML::TransformationBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TransformationSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TransformationSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="ColorBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnColorAttriubteDoubleClicked']" domainClass="UGSML::ColorBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ColorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ColorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="TextureBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnTextureAttriubteDoubleClicked']" domainClass="UGSML::TextureBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="ModelBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnModelAttriubteDoubleClicked']" domainClass="UGSML::ModelBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ModelSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ModelSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="ParticleBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnParticleAttriubteDoubleClicked']" domainClass="UGSML::ParticleBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ParticleSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ParticleSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="AudioBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAudioAttriubteDoubleClicked']" domainClass="UGSML::AudioBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/AudioSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/AudioSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="MaterialBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnMaterialAttriubteDoubleClicked']" domainClass="UGSML::MaterialBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/MaterialSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/MaterialSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="EnumBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnEnumAttriubteDoubleClicked']" domainClass="UGSML::EnumBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <subNodeMappings name="StructureBasedAttributeNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnStructureAttriubteDoubleClicked']" domainClass="UGSML::StructureBasedAttribute">
              <conditionnalStyles predicateExpression="aql:(self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty()">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" labelColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='UsedAttribute']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StructureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:not ((self.eContainer().eContainer().GameSystems->any(GameSystemInstance | (GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()))->notEmpty())">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StructureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="13" labelExpression="aql:self.FeatureCategory" iconPath="/UGSMLGraphicalEditor/Icons/Container/AttributeContainer.png" backgroundStyle="Liquid" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeContainerColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeContainerColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="AttributeSystemContainer" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnAttributeSystemDoubleClicked']" domainClass="UGSML::AttributeSystem" childrenPresentation="VerticalStack">
            <subContainerMappings name="ArrayConstraintContainer" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnAttributeSystemDoubleClicked']" domainClass="UGSML::AttributeSystem" childrenPresentation="List">
              <subNodeMappings name="ArrayConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnArrayConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnArrayConstraintDoubleClicked']" domainClass="UGSML::ArrayConstraint">
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::BooleanBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/BooleanArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::AudioBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/AudioArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::CharacterBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/CharacterArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ColorBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/ColorArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::DecimalBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/DecimalArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::EnumBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/EnumArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::IntegerBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/IntegerArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::MaterialBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/MaterialArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ModelBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/ModelArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::NameBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/NameArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ParticleBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/ParticleArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::RotatorBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/RotatorArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StringBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/StringArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StructureBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/StructureArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::TextBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/TextArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::TextureBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/TextureArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::TransformationBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/TransformationArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::Vector2DBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/Vector2DArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::VectorBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/VectorArrayIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" labelExpression="Array Constraints" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Array/DefaultArrayIcon.png" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor2']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
              </style>
            </subContainerMappings>
            <subContainerMappings name="SingleConstraintContainer" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnAttributeSystemDoubleClicked']" domainClass="UGSML::AttributeSystem" childrenPresentation="List">
              <subNodeMappings name="ValueBasedConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnValueBasedConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::ValueBasedConstraint">
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::DecimalBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DecimalSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::IntegerBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/IntegerSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
              </subNodeMappings>
              <subNodeMappings name="BooleanBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::BooleanBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/BooleanSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="LetterBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::LetterBasedConstraint">
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::CharacterBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/CharacterSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::NameBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/NameSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StringBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StringSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::TextBasedAttribute)">
                  <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextSingleIcon.png" labelAlignment="LEFT">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
              </subNodeMappings>
              <subNodeMappings name="Vector2DBasedConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnVector2DBasedConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::Vector2DBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/Vector2DSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="VectorBasedConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnVectorBasedConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::VectorBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/VectorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="RotatorBasedConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnRotatorBasedConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::RotatorBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/RotatorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="TransformationBasedConstraintNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnTransformationBasedConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::TransformationBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TransformationSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ColorBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::ColorBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ColorSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="TextureBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::TextureBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ModelBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::ModelBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ModelSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="ParticleBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::ParticleBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ParticleSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="AudioBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::AudioBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/AudioSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="MaterialBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::MaterialBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/MaterialSingleIcon_Palette.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="EnumBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::EnumBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <subNodeMappings name="StructureBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.4/@ownedTools[name='OnSingleValueConstraintDoubleClicked']" domainClass="UGSML::StructureBasedConstraint">
                <style xsi:type="style:SquareDescription" labelSize="11" labelExpression="aql:self.ConstrainedAttributeInstance.FeatureName" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StructureSingleIcon.png" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" labelExpression="Single Constraints" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DefaultSingleIcon.png" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor2']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="13" labelExpression="aql:self.SystemName" iconPath="/UGSMLGraphicalEditor/Icons/System/AttributeSystem.png" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='AttributeSystemColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="15" labelExpression="aql:self.GameTitle + ' - ' + self.GameVersionName + '(' + self.GameVersionNumber + ')'" iconPath="/UGSMLGraphicalEditor/Icons/Game/BlackUnrealEngineLogo.png" widthComputationExpression="100" heightComputationExpression="60" backgroundStyle="Liquid" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='GameNodeColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='GameNodeColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="Base">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnGameContainerDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Game Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::Game" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.2/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="FeatureContainer">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnStructureContainerDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Structure Container Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::GameStructureContainer" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.3/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnAttributeContainerDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Attribute Container Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::GameAttributeContainer" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.3/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="GameStructure">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnSimpleEnumStructureDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='SimpleEnumStructureContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Simple Enumeration)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::SimpleEnumStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnBitmaskedEnumStructureDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='BitmaskedEnumStructureContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Bitmasked Enumeration)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::BitmaskedEnumStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnSimpleEnumStateDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='SimpleEnumStructureContainer']/@subNodeMappings[name='EnumStateNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Enumeration State)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.3"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnBitmaskedEnumStateDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='BitmaskedEnumStructureContainer']/@subNodeMappings[name='EnumStateNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Enumeration State)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.3"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnSimpleEnumStateDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.eContainer().EnumStates->size() > 1">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </cases>
                <cases conditionExpression="aql:self.eContainer().EnumStates->size() = 1">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Minimum Constraint Violated">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnSimpleEnumStateDeleted']/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="SimpleEnumMinLimitGroup" labelExpression="Can't delete all states of the enumeration. Each enum must at least contain 1 state." semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnBitmaskedEnumStateDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.eContainer().EnumStates->size() > 1">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </cases>
                <cases conditionExpression="aql:self.eContainer().EnumStates->size() = 1">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Minimum Constraint Violated">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnBitmaskedEnumStateDeleted']/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="BitmaskedEnumMinLimitGroup" labelExpression="Can't delete all states of the enumeration. Each enum must at least contain 1 state." semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnDataBasedStructureDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Data Structure)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::DataBasedStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.2"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnDataBasedStructureAttributeDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.eContainer().StructureAttributes->size() > 1">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </cases>
                <cases conditionExpression="aql:self.eContainer().StructureAttributes->size() = 1">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Minimum Constraint Violated">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnDataBasedStructureAttributeDeleted']/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="DataStructureAttributeMinLimitGroup" labelExpression="Can't delete all attributes of the structure. Each structure must at least contain 1 attribute." semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnGameStructureDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteGameStructure" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.oclIsTypeOf(UGSML::EnumBasedAttribute)">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.EnumType = element">
                          <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteGameStructure" valueExpression="aql:false"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.oclIsTypeOf(UGSML::StructureBasedAttribute)">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.DataType = element">
                          <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteGameStructure" valueExpression="aql:false"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteGameStructure = true">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteGameStructure = false">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Referenced Game Structure">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.2/@ownedTools[name='OnGameStructureDeleted']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                        <groups name="ReferencedGameStructureGroup" labelExpression="aql:self.FeatureName + ' is referenced in an attribute container. Please remove all references and try again.'" semanticCandidateExpression="var:self">
                          <style fontSizeExpression="9" toggleStyle="NONE">
                            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                          </style>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="GameAttributes">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnDecimalAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='DecimalBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='DecimalBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Decimal Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::DecimalBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnIntegerAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='IntegerBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='IntegerBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Integer Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::IntegerBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnBooleanAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='BooleanBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='BooleanBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Boolean Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::BooleanBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.2"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnCharacterAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='CharacterBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='CharacterBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Character Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::CharacterBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.3"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnNameAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='NameBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='NameBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Name Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::NameBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.4"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnStringAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='StringBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='StringBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (String Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::StringBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.5"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnTextAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TextBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TextBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Text Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::TextBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.6"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVector2DAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='Vector2DBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='Vector2DBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Vector2D Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::Vector2DBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.7"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVectorAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='VectorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='VectorBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Vector Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::VectorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.8"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnRotatorAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='RotatorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='RotatorBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Rotator Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::RotatorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.9"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnTransformationAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TransformationBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TransformationBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Transformation Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::TransformationBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.10"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnColorAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ColorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ColorBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Color Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::ColorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.11"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnTextureAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TextureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TextureBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Texture Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::TextureBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.12"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnModelAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ModelBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ModelBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Model Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::ModelBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.13"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnParticleAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ParticleBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ParticleBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Particle Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::ParticleBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.14"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnAudioAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='AudioBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='AudioBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Audio Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::AudioBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.15"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnMaterialAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='MaterialBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='MaterialBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Material Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::MaterialBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.16"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnEnumAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='EnumBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='EnumBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Enumeration Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::EnumBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.17"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnStructureAttriubteDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='StructureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='StructureBasedAttributeNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Structure Attribute)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::StructureBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.18"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnAttributeDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="CanDeleteAttribute" valueExpression="aql:true">
                <subModelOperations xsi:type="tool_1:Let" variableName="ReferencedSystem" valueExpression="aql:null">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContainer().eContainer().GameSystems" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteAttribute" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ReferencedSystem" valueExpression="aql:AttributeSystemInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteAttribute" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ReferencedSystem" valueExpression="aql:AttributeSystemInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteAttribute = true">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteAttribute = false">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Referenced Attribute">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.3/@ownedTools[name='OnAttributeDeleted']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@groups.0"/>
                      <groups name="ReferencedAttributeGroup" labelExpression="aql:element.FeatureName + ' is referenced by ' + ReferencedSystem.SystemName + ' and can\'t be deleted.'" domainClass="UGSML::GameAttribute" semanticCandidateExpression="var:self">
                        <style fontSizeExpression="9" toggleStyle="NONE">
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                        </style>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="AttributeSystem">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnAttributeSystemDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.SystemName + ' Properties (Attribute System)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::AttributeSystem" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnArrayConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Array Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnSingleValueConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='AudioBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='BooleanBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ColorBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='EnumBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='LetterBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ModelBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ParticleBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='RotatorBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='StructureBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='TextureBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='TransformationBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ValueBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='Vector2DBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='VectorBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='MaterialBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Open Constraint Manager" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:Switch">
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::ValueBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::LetterBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::Vector2DBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::VectorBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::RotatorBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::TransformationBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <cases conditionExpression="aql:element.oclIsTypeOf(UGSML::ColorBasedConstraint)">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                          <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ColorConstraintDiagram']"/>
                        </subModelOperations>
                      </cases>
                      <default>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Constraint Rule">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.21"/>
                        </subModelOperations>
                      </default>
                    </firstModelOperations>
                  </initialOperation>
                </buttons>
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" domainClass="UGSML::SingleValueConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.2 //@extensions.0/@categories.6/@groups.3 //@extensions.0/@categories.6/@groups.4 //@extensions.0/@categories.6/@groups.5 //@extensions.0/@categories.6/@groups.6 //@extensions.0/@categories.6/@groups.7 //@extensions.0/@categories.6/@groups.8 //@extensions.0/@categories.6/@groups.9 //@extensions.0/@categories.6/@groups.10 //@extensions.0/@categories.6/@groups.11 //@extensions.0/@categories.6/@groups.12 //@extensions.0/@categories.6/@groups.13 //@extensions.0/@categories.6/@groups.15 //@extensions.0/@categories.6/@groups.16 //@extensions.0/@categories.6/@groups.14"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnArrayConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StringBasedAttribute) or element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ColorBasedAttribute)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StringBasedAttribute)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                        <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.LetterCustomizationConstraint.FilterStrings = element.ConstrainedAttributeInstance">
                            <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                            <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsFilterString" valueExpression="aql:SingleValueConstraintInstance"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsFilterString->notEmpty()">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Filter String">
                              <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                              <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.19"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                            <subModelOperations xsi:type="tool_1:RemoveElement"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ColorBasedAttribute)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                        <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ColorCustomizationConstraint.FilterColors = element.ConstrainedAttributeInstance">
                            <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                            <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsFilterColor" valueExpression="aql:SingleValueConstraintInstance"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsFilterColor->notEmpty()">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Filter Color">
                              <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                              <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.20"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                            <subModelOperations xsi:type="tool_1:RemoveElement"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::StringBasedAttribute) or element.ConstrainedAttributeInstance.oclIsTypeOf(UGSML::ColorBasedAttribute))">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnValueBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.LetterLengthConstraint.MinimumLengthAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinLength" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.LetterLengthConstraint.MaximumLengthAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaxLength" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.MinimumValue.MinimumAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.MaximumValue.MaximumAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.ConversionDependencyConstraint.NextAttributeInChain = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsNextConversionAttribute" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.ConversionDependencyConstraint.ConversionChain->includes(element.BaseOrRangeConstraint.ConversionDependencyConstraint)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedInConversionChain" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.MarginOfError.MOEAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMarginOfError" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RegenerationConstraint.RegenerationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsRegeneration" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:SingleValueConstraintInstance.DirectDependencyConstraint.DependentAttributes" iteratorName="DependentAttributeInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DependentAttributeInstance = element.ConstrainedAttributeInstance">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsDependency" valueExpression="aql:SingleValueConstraintInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:SingleValueConstraintInstance.DistortionConstraints" iteratorName="DistortionConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DistortionConstraintInstance.DistortionAttribute = element.ConstrainedAttributeInstance">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsDistortion" valueExpression="aql:SingleValueConstraintInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinLength->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Letter Minimum Length">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.17"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaxLength->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Letter Maximum Length">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.18"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsNextConversionAttribute->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Next Conversion Attribute">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.23"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedInConversionChain->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used In Conversion Chain">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.24"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMarginOfError->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Margin Of Error">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.25"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsRegeneration->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Regeneration">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.26"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsDependency->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Dependency">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.27"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsDistortion->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Distortion">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.28"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnVector2DBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.Vector2DRangeBasedConstraint.MinimumVector2DAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.Vector2DRangeBasedConstraint.MaximumVector2DAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnVectorBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.VectorRangeBasedConstraint.MinimumVectorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.VectorRangeBasedConstraint.MaximumVectorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnRotatorBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RotatorRangeBasedConstraint.MinimumRotatorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RotatorRangeBasedConstraint.MaximumRotatorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnTransformationBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.TransformationRangeBasedConstraint.MinimumTransformationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.TransformationRangeBasedConstraint.MaximumTransformationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Game">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Game" precondition="aql:container.Game->isEmpty()" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Game/BlackUnrealEngineLogo_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:container.Game->size() &lt; 1">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Game" referenceName="Game">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Game Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" domainClass="UGSML::Game" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.2/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:container.Game->size() > 0">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Game Max Limit">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@additionalLayers[name='PaletteLayer']/@toolSections.0/@ownedTools[name='Game']/@initialOperation/@firstModelOperations/@subModelOperations.0/@cases.1/@subModelOperations.0/@groups.0"/>
                      <groups name="GameMaxLimitGroup" labelExpression="Game instance is already defined. You can only define 1 game instance per project." semanticCandidateExpression="var:self">
                        <style fontSizeExpression="9" toggleStyle="NONE">
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                        </style>
                      </groups>
                    </subModelOperations>
                  </cases>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Container">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Structure Container" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Container/StructureContainer_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::GameStructureContainer" referenceName="GameFeatureContainers"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Attribute Container" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Container/AttributeContainer_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::GameAttributeContainer" referenceName="GameFeatureContainers"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Game Structure">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Simple Enumeration" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='SimpleEnumStructureContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Enumeration_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::SimpleEnumStructure" referenceName="GameStructures">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumState" referenceName="EnumStates">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="State">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CurrentEnum" valueExpression="aql:self">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Simple Enumeration)'">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(CurrentEnum)" iteratorName="GameStructureInstance">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentEnum">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentEnum">
                                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Structure Name">
                                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.5"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" domainClass="UGSML::SimpleEnumStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Bitmasked Enumeration" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='BitmaskedEnumStructureContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Enumeration_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::BitmaskedEnumStructure" referenceName="GameStructures">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumState" referenceName="EnumStates">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="State">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CurrentEnum" valueExpression="aql:self">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Bitmasked Enumeration)'">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(CurrentEnum)" iteratorName="GameStructureInstance">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentEnum">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentEnum">
                                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Structure Name">
                                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.7"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </buttons>
                            <page name="Default Page" domainClass="UGSML::BitmaskedEnumStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Structure" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']" iconPath="/UGSMLGraphicalEditor/Icons/Structures/Structure_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::DataBasedStructure" referenceName="GameStructures">
                  <subModelOperations xsi:type="tool_1:Let" variableName="CurrentStructure" valueExpression="aql:self">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Data Structure)'">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                            <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                              <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(CurrentStructure)" iteratorName="GameStructureInstance">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Structure Name">
                                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.9"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" domainClass="UGSML::DataBasedStructure" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.2"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="System">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Attribute System" containerMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']" iconPath="/UGSMLGraphicalEditor/Icons/System/AttributeSystem_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::AttributeSystem" referenceName="GameSystems" variableName="AttributeSystemInstance">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.SystemName + ' Properties (Attribute System)'">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                          <subModelOperations xsi:type="tool_1:For" expression="aql:container.GameSystems->excluding(AttributeSystemInstance)" iteratorName="GameSystem">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameSystem.SystemName.toLower() = AttributeSystemInstance.SystemName.toLower()">
                              <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                              <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                              <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.18"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" domainClass="UGSML::AttributeSystem" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Attribute/Constraint">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Integer Value" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='IntegerBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='IntegerBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ValueBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/IntegerSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::IntegerBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::IntegerBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Integer Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::IntegerBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.1"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ValueBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.2"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decimal Value" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='DecimalBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='DecimalBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ValueBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/DecimalSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::DecimalBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::DecimalBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Decimal Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::DecimalBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.0"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ValueBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.2"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Boolean" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='BooleanBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='BooleanBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='BooleanBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/BooleanSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::BooleanBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::BooleanBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Boolean Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::BooleanBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.2"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::BooleanBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::BooleanBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.3"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Character" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='CharacterBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='CharacterBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='LetterBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/CharacterSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::CharacterBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::CharacterBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Character Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::CharacterBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.3"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::LetterBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Name" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='NameBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='NameBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='LetterBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/NameSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::NameBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::NameBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Name Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::NameBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.4"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::LetterBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="String" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='StringBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='StringBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='LetterBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StringSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::StringBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::StringBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (String Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::StringBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.5"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::LetterBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Text" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TextBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TextBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='LetterBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TextBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TextBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Text Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::TextBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.6"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::LetterBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Vector2D" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='Vector2DBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='Vector2DBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='Vector2DBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/Vector2DSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Vector2D Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::Vector2DBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.7"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::Vector2DBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.5"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Vector" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='VectorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='VectorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='VectorBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/VectorSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Vector Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::VectorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.8"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::VectorBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.6"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Rotator" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='RotatorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='RotatorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='RotatorBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/RotatorSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Rotator Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::RotatorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.9"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::RotatorBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.7"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Tranformation" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TransformationBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TransformationBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='TransformationBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TransformationSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::GameAttributeContainer)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:GameAttributeInstance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="Translation">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:GameAttributeInstance">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedAttribute" referenceName="Rotation">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="Scale3D"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::DataBasedStructure)">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:StructureAttributeInstance">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="Translation">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:StructureAttributeInstance">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedAttribute" referenceName="Rotation">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:StructureAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedAttribute" referenceName="Scale3D"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Transformation Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::TransformationBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.10"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::TransformationBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.8"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Color" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ColorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ColorBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ColorBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ColorSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ColorBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ColorBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Color Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::ColorBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.11"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ColorBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ColorBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.9"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Texture" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='TextureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='TextureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='TextureBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/TextureSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TextureBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TextureBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Texture Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::TextureBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.12"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TextureBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::TextureBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.10"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Model" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ModelBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ModelBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ModelBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ModelSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ModelBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ModelBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Model Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::ModelBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.13"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ModelBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ModelBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.11"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Particle" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='ParticleBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='ParticleBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='ParticleBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/ParticleSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ParticleBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ParticleBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Particle Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::ParticleBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.14"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ParticleBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ParticleBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.12"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Audio" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='AudioBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='AudioBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='AudioBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/AudioSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::AudioBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::AudioBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Audio Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::AudioBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.15"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::AudioBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::AudioBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.13"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Materail" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='MaterialBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='MaterialBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='MaterialBasedAttributeNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/MaterialSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MaterialBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MaterialBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Material Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                      <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::MaterialBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.16"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MaterialBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::MaterialBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.14"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Enumeration" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='EnumBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='EnumBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='EnumBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/EnumSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Enumeration Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:true">
                                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.EnumType->size() &lt; 1">
                                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Enum Type">
                                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.21"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::EnumBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.17"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::EnumBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.15"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Structure" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameAttributeContainer']/@subNodeMappings[name='StructureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='GameStructureContainer']/@subContainerMappings[name='DataBasedStructureContainer']/@subNodeMappings[name='StructureBasedAttributeNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='ArrayConstraintContainer']/@subNodeMappings[name='ArrayConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='MainDiagram']/@defaultLayer/@containerMappings[name='GameContainer']/@subContainerMappings[name='AttributeSystemContainer']/@subContainerMappings[name='SingleConstraintContainer']/@subNodeMappings[name='StructureBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Attributes/Single/StructureSingleIcon_Palette.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::StructureBasedAttribute" referenceName="GameAttributes" variableName="GameAttributeInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::StructureBasedAttribute" referenceName="StructureAttributes" variableName="StructureAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CurrentAttribute" valueExpression="aql:self">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' Properties (Structure Attribute)'">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:true">
                                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().StructureAttributes->excluding(CurrentAttribute)" iteratorName="GameAttributeInstance">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentAttribute">
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameAttributeInstance.FeatureName.toLower() = self.FeatureName.toLower()">
                                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:CurrentStructure">
                                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Attribute Name">
                                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.19"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.DataType->size() &lt; 1">
                                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Data Type">
                                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.22"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" domainClass="UGSML::StructureBasedAttribute" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.18"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:container.oclIsTypeOf(UGSML::AttributeSystem)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Array Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ArrayConstraint" referenceName="ArrayConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Array Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.1"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(containerView.toString() = 'NodeList Single Constraints').toString()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::StructureBasedConstraint" referenceName="SingleValueConstraints" variableName="ConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Single Constraint Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:ConstraintInstance.ConstrainedAttributeInstance->size() &lt; 1">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Constraint">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.20"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" domainClass="UGSML::StructureBasedConstraint" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.16"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ValueConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <metamodel href="../../UGSML/model/UGSML.ecore#/"/>
      <defaultLayer name="MainLayer">
        <containerMappings name="ValueBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnValueConstraintContainerDeleted']" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnValueBasedConstraintDoubleClicked']" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="BaseValueConstraintContainer" preconditionExpression="aql:(self.Variability = UGSML::VariabilityType::Variable) and ((self.BaseOrRangeConstraint.oclIsTypeOf(UGSML::BaseValueConstraint)) or (self.BaseOrRangeConstraint->size() &lt; 1))" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="BaseValueConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnBaseValueConstraintDoubleClicked']" domainClass="UGSML::BaseValueConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Default Base Value = ' + self.DefaultBaseValue + '  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Base'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="ValueRangeBasedConstraintContainer" preconditionExpression="aql:(self.Variability = UGSML::VariabilityType::Variable) and ((self.BaseOrRangeConstraint.oclIsTypeOf(UGSML::ValueRangeBasedConstraint)) or (self.BaseOrRangeConstraint->size() &lt; 1)) and (self.DirectDependencyConstraint->isEmpty())" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="ValueRangeBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnValueRangeBasedConstraintDoubleClicked']" domainClass="UGSML::ValueRangeBasedConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Initializer: ' + self.Initializer + ', AdditionLimit: ' + self.Limit + '  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="MinimumValueNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnMinimumConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnValueRangeBasedConstraintDoubleClicked']" domainClass="UGSML::MinimumValue">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Minimum Value (' + self.MinimumAttribute.FeatureName + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="MaximumValueNode" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnMaximumConstraintDeleted']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnValueRangeBasedConstraintDoubleClicked']" domainClass="UGSML::MaximumValue">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Maximum Value (' + self.MaximumAttribute.FeatureName + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="ConversionDependencyNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnValueRangeBasedConstraintDoubleClicked']" domainClass="UGSML::ConversionDependencyConstraint">
              <conditionnalStyles predicateExpression="aql:self.NextAttributeInChain->size() > 0">
                <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Conversion Dependency (' + self.NextAttributeInChain.FeatureName + ')  '" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.NextAttributeInChain->size() &lt; 1">
                <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Conversion Dependency (Final)  '" labelAlignment="LEFT">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Range'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="MarginOfErrorConstraintContainer" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="MarginOfErrorConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnMarginOfErrorConstraintDoubleClicked']" domainClass="UGSML::MarginOfErrorConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - ' + self.MOEAttribute.FeatureName + '  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Margin Of Error'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="RegenerationConstraintContainer" preconditionExpression="aql:(self.Variability = UGSML::VariabilityType::Variable)" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="RegenerationConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnRegenerationConstraintDoubleClicked']" domainClass="UGSML::RegenerationConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - ' + self.RegenerationAttribute.FeatureName + '  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Regeneration'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="DirectDependencyConstraintContainer" preconditionExpression="aql:(self.Variability = UGSML::VariabilityType::Variable) and (if self.BaseOrRangeConstraint->notEmpty() then self.BaseOrRangeConstraint.oclIsTypeOf(UGSML::BaseValueConstraint) else true endif)" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="DirectDependencyConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnDirectDependencyConstraintDoubleClicked']" domainClass="UGSML::DirectDependencyConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Dependency  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Direct Dependency'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="DistortionConstraintContainer" semanticCandidatesExpression="aql:self" domainClass="UGSML::ValueBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="GetterDistortionConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnDistortionConstraintDoubleClicked']" domainClass="UGSML::GetterDistortionConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Getter Distortion (' + self.DistortionAttribute.FeatureName + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <subNodeMappings name="SetterDistortionConstraintNode" preconditionExpression="aql:(self.eContainer().Variability = UGSML::VariabilityType::Variable)" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnDistortionConstraintDoubleClicked']" domainClass="UGSML::SetterDistortionConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Setter Distortion (' + self.DistortionAttribute.FeatureName + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Distortions'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ValueConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="EdgeLayer" optional="false">
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationMarginOfError" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.MarginOfError.MOEAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="MOE">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationRegeneration" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.RegenerationConstraint.RegenerationAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Regeneration">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationMinimum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.BaseOrRangeConstraint.MinimumValue.MinimumAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Minimum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationMaximum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.BaseOrRangeConstraint.MaximumValue.MaximumAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Maximum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationConversionDependency" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.BaseOrRangeConstraint.ConversionDependencyConstraint.NextAttributeInChain)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Next Conversion">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationDirectDependency" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | self.DirectDependencyConstraint.DependentAttributes->includes(AttributeConstraintInstance.ConstrainedAttributeInstance))">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Direct Dependency">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ValueBasedConstraintToValueBasedConstraintRelationDistortion" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | self.DistortionConstraints->exists(DistortionConstraintInstance | DistortionConstraintInstance.DistortionAttribute = AttributeConstraintInstance.ConstrainedAttributeInstance))">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Distortion">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClicks">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnValueBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.2"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnBaseValueConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='BaseValueConstraintContainer']/@subNodeMappings[name='BaseValueConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Base Value Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnValueRangeBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='ValueRangeBasedConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='ConversionDependencyNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='MaximumValueNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='MinimumValueNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.1 //@extensions.0/@categories.7/@groups.2 //@extensions.0/@categories.7/@groups.3 //@extensions.0/@categories.7/@groups.4"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnMarginOfErrorConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='MarginOfErrorConstraintContainer']/@subNodeMappings[name='MarginOfErrorConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Margin Of Error Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.5"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnRegenerationConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='RegenerationConstraintContainer']/@subNodeMappings[name='RegenerationConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Regeneration Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.6"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnDirectDependencyConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DirectDependencyConstraintContainer']/@subNodeMappings[name='DirectDependencyConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Direct Dependency Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.DependentAttributes->size() &lt; 1">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Dependent Attribute Found">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.14"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:For" expression="aql:element.DependentAttributes" iteratorName="DependentAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.eContainer().ConstrainedAttributeInstance = DependentAttributeInstance">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Self Dependency">
                            <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                            <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.15"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer().eContainer()">
                        <subModelOperations xsi:type="tool_1:For" expression="aql:element.DependentAttributes" iteratorName="DependentAttributeInstance">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(DependentAttributeInstance)">
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:DependentAttributeInstance"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </buttons>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.7"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnDistortionConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DistortionConstraintContainer']/@subNodeMappings[name='GetterDistortionConstraintNode'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DistortionConstraintContainer']/@subNodeMappings[name='SetterDistortionConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Distortion Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.8 //@extensions.0/@categories.7/@groups.9"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Deletion">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnValueConstraintContainerDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.LetterLengthConstraint.MinimumLengthAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinLength" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.LetterLengthConstraint.MaximumLengthAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaxLength" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.MinimumValue.MinimumAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.MaximumValue.MaximumAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.ConversionDependencyConstraint.NextAttributeInChain = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsNextConversionAttribute" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.BaseOrRangeConstraint.ConversionDependencyConstraint.ConversionChain->includes(element.BaseOrRangeConstraint.ConversionDependencyConstraint)">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedInConversionChain" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.MarginOfError.MOEAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMarginOfError" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RegenerationConstraint.RegenerationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsRegeneration" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:SingleValueConstraintInstance.DirectDependencyConstraint.DependentAttributes" iteratorName="DependentAttributeInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DependentAttributeInstance = element.ConstrainedAttributeInstance">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsDependency" valueExpression="aql:SingleValueConstraintInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:SingleValueConstraintInstance.DistortionConstraints" iteratorName="DistortionConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DistortionConstraintInstance.DistortionAttribute = element.ConstrainedAttributeInstance">
                        <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                        <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsDistortion" valueExpression="aql:SingleValueConstraintInstance"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinLength->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Letter Minimum Length">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.17"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaxLength->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Letter Maximum Length">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.18"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsNextConversionAttribute->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Next Conversion Attribute">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.23"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedInConversionChain->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used In Conversion Chain">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.24"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMarginOfError->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Margin Of Error">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.25"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsRegeneration->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Regeneration">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.26"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsDependency->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Dependency">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.27"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsDistortion->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Element Used As Distortion">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.28"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnMinimumConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.eContainer().MaximumValue->isEmpty()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Maximum Found">
                    <buttons labelExpression="Remove Range Constraint" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.29"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.eContainer().MaximumValue->notEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.Initializer = UGSML::InitializationMode::Minimum">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Initializer" valueExpression="aql:UGSML::InitializationMode::Default"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnMaximumConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.eContainer().MinimumValue->isEmpty()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Minimum Found">
                    <buttons labelExpression="Remove Range Constraint" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.29"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.eContainer().MinimumValue->notEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.Initializer = UGSML::InitializationMode::Maximum">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Initializer" valueExpression="aql:UGSML::InitializationMode::Default"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Base" precondition="aql:container.BaseOrRangeConstraint->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='BaseValueConstraintContainer']/@subNodeMappings[name='BaseValueConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Base.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::BaseValueConstraint" referenceName="BaseOrRangeConstraint" variableName="BaseValueConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Base Value Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Minimum" precondition="aql:container.BaseOrRangeConstraint.MinimumValue->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='MinimumValueNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Minimum.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:self.BaseOrRangeConstraint">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ValueRangeBasedConstraintInstance->size() &lt; 1">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueRangeBasedConstraint" referenceName="BaseOrRangeConstraint">
                      <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:instance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ValueRangeBasedConstraintInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MinimumValue" referenceName="MinimumValue" variableName="MinimumConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:MinimumConstraintInstance.MinimumAttribute->isEmpty()">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Minimum">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.10"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.2"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Maximum" precondition="aql:container.BaseOrRangeConstraint.MaximumValue->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='MaximumValueNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Maximum.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:self.BaseOrRangeConstraint">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ValueRangeBasedConstraintInstance->size() &lt; 1">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueRangeBasedConstraint" referenceName="BaseOrRangeConstraint">
                      <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:instance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ValueRangeBasedConstraintInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MaximumValue" referenceName="MaximumValue" variableName="MaximumConstraintInstance">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:MaximumConstraintInstance.MaximumAttribute->isEmpty()">
                              <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Maximum">
                                <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.11"/>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </buttons>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.3"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ConversionDependency" precondition="aql:container.BaseOrRangeConstraint.ConversionDependencyConstraint->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='ValueRangeBasedConstraintContainer']/@subNodeMappings[name='ConversionDependencyNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/ConversionDependency.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:self.BaseOrRangeConstraint">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ValueRangeBasedConstraintInstance->size() &lt; 1">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueRangeBasedConstraint" referenceName="BaseOrRangeConstraint">
                      <subModelOperations xsi:type="tool_1:Let" variableName="ValueRangeBasedConstraintInstance" valueExpression="aql:instance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:ValueRangeBasedConstraintInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ConversionDependencyConstraint" referenceName="ConversionDependencyConstraint" variableName="ConversionDependencyConstraintInstance">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="AttributeName" valueExpression="aql:ConversionDependencyConstraintInstance.eContainer().eContainer().ConstrainedAttributeInstance.FeatureName">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.4"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Margin Of Error" precondition="aql:container.MarginOfError->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='MarginOfErrorConstraintContainer']/@subNodeMappings[name='MarginOfErrorConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/MarginOfError.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::MarginOfErrorConstraint" referenceName="MarginOfError" variableName="MarginOfErrorConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Margin Of Error Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:MarginOfErrorConstraintInstance.MOEAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Margin Of Error">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.12"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.5"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Regeneration" precondition="aql:container.RegenerationConstraint->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='RegenerationConstraintContainer']/@subNodeMappings[name='RegenerationConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Regeneration.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RegenerationConstraint" referenceName="RegenerationConstraint" variableName="RegenerationConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Regeneration Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:RegenerationConstraintInstance.RegenerationAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Regeneration">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.13"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.6"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Direct Dependency" precondition="aql:container.DirectDependencyConstraint->size() &lt; 1" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DirectDependencyConstraintContainer']/@subNodeMappings[name='DirectDependencyConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/DirectDependency.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::DirectDependencyConstraint" referenceName="DirectDependencyConstraint" variableName="DirectDependencyConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Direct Dependency Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DirectDependencyConstraintInstance.DependentAttributes->size() &lt; 1">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Dependent Attribute Found">
                            <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                            <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.14"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:For" expression="aql:DirectDependencyConstraintInstance.DependentAttributes" iteratorName="DependentAttributeInstance">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DirectDependencyConstraintInstance.eContainer().ConstrainedAttributeInstance = DependentAttributeInstance">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Self Dependency">
                              <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                              <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.15"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:container.eContainer()">
                          <subModelOperations xsi:type="tool_1:For" expression="aql:DirectDependencyConstraintInstance.DependentAttributes" iteratorName="DependentAttributeInstance">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(DependentAttributeInstance)">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:DependentAttributeInstance"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.7"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Getter Distortion" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DistortionConstraintContainer']/@subNodeMappings[name='GetterDistortionConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Distortion.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::GetterDistortionConstraint" referenceName="DistortionConstraints" variableName="GetterDistortionConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Getter Distortion Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:GetterDistortionConstraintInstance.DistortionAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Distortion">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.16"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.8"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Setter Distortion" precondition="aql:container.Variability = UGSML::VariabilityType::Variable" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ValueConstraintDiagram']/@defaultLayer/@containerMappings[name='ValueBasedConstraintContainer']/@subContainerMappings[name='DistortionConstraintContainer']/@subNodeMappings[name='SetterDistortionConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Distortion.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::SetterDistortionConstraint" referenceName="DistortionConstraints" variableName="SetterDistortionConstraintInstance">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Setter Distortion Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:SetterDistortionConstraintInstance.DistortionAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Distortion">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.16"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.9"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="LetterConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="LetterBasedConstraintContainer" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnLetterBasedConstraintDoubleClicked']" domainClass="UGSML::LetterBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="LetterLengthConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::LetterBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="LetterLengthConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnLetterLengthConstraintDoubleClicked']" domainClass="UGSML::LetterLengthConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Range (Min: ' + if self.MinimumLengthAttribute->notEmpty() then self.MinimumLengthAttribute.FeatureName else 'null' endif + ', Max: ' + if self.MaximumLengthAttribute->notEmpty() then self.MaximumLengthAttribute.FeatureName else 'null' endif + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Letter Length'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="LetterCustomizationConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::LetterBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="LetterCustomizationConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnLetterCustomizationConstraintDoubleClicked']" domainClass="UGSML::LetterCustomizationConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - ' + self.FilterStrings.FeatureName + ' (' + self.FilterType + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Filter'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='LetterConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnLetterBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@defaultLayer/@containerMappings[name='LetterBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnLetterLengthConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@defaultLayer/@containerMappings[name='LetterBasedConstraintContainer']/@subContainerMappings[name='LetterLengthConstraintContainer']/@subNodeMappings[name='LetterLengthConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Letter Length Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumLengthAttribute->isEmpty() and element.MaximumLengthAttribute->isEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Letter Range">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.2"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </buttons>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnLetterCustomizationConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@defaultLayer/@containerMappings[name='LetterBasedConstraintContainer']/@subContainerMappings[name='LetterCustomizationConstraintContainer']/@subNodeMappings[name='LetterCustomizationConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Letter Filtering Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.FilterStrings->isEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Filter String">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.3"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </buttons>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Letter Length" precondition="aql:self.LetterLengthConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@defaultLayer/@containerMappings[name='LetterBasedConstraintContainer']/@subContainerMappings[name='LetterLengthConstraintContainer']/@subNodeMappings[name='LetterLengthConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Range.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterLengthConstraint" referenceName="LetterLengthConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Letter Length Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumLengthAttribute->isEmpty() and element.MaximumLengthAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Letter Range">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.2"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Letter Filter" precondition="aql:self.LetterCustomizationConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='LetterConstraintDiagram']/@defaultLayer/@containerMappings[name='LetterBasedConstraintContainer']/@subContainerMappings[name='LetterCustomizationConstraintContainer']/@subNodeMappings[name='LetterCustomizationConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Filter.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::LetterCustomizationConstraint" referenceName="LetterCustomizationConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Letter Filtering Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.FilterStrings->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Filter String">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.3"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Vector2DConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="Vector2DBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnVector2DBasedConstraintDeleted']" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnVector2DBasedConstraintDoubleClicked']" domainClass="UGSML::Vector2DBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="Vector2DRangeBasedConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::Vector2DBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="Vector2DRangeBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnVector2DRangeBasedConstraintDoubleClicked']" domainClass="UGSML::Vector2DRangeBasedConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Range (Min: ' + if self.MinimumVector2DAttribute->notEmpty() then self.MinimumVector2DAttribute.FeatureName else 'null' endif + ', Max: ' + if self.MaximumVector2DAttribute->notEmpty() then self.MaximumVector2DAttribute.FeatureName else 'null' endif + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Range'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='Vector2DConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='Vector2DConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='Vector2DConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='Vector2DConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="EdgeLayer" optional="false">
        <edgeMappings name="Vector2DBasedConstraintToVector2DBasedConstraintMinimum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.Vector2DRangeBasedConstraint.MinimumVector2DAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Minimum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Vector2DBasedConstraintToVector2DBasedConstraintMaximum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.Vector2DRangeBasedConstraint.MaximumVector2DAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Maximum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVector2DBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.5"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVector2DRangeBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']/@subContainerMappings[name='Vector2DRangeBasedConstraintContainer']/@subNodeMappings[name='Vector2DRangeBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.9/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Deletion">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnVector2DBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.Vector2DRangeBasedConstraint.MinimumVector2DAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.Vector2DRangeBasedConstraint.MaximumVector2DAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Vector2D Range" precondition="aql:self.Vector2DRangeBasedConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='Vector2DConstraintDiagram']/@defaultLayer/@containerMappings[name='Vector2DBasedConstraintContainer']/@subContainerMappings[name='Vector2DRangeBasedConstraintContainer']/@subNodeMappings[name='Vector2DRangeBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Range.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DRangeBasedConstraint" referenceName="Vector2DRangeBasedConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Vector2D Range Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumVector2DAttribute->isEmpty() and element.MaximumVector2DAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector2D Range">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.9/@groups.1"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.9/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="VectorConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="VectorBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnVectorBasedConstraintDeleted']" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnVectorBasedConstraintDoubleClicked']" domainClass="UGSML::VectorBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="VectorRangeBasedConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::VectorBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="VectorRangeBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnVectorRangeBasedConstraintDoubleClicked']" domainClass="UGSML::VectorRangeBasedConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Range (Min: ' + if self.MinimumVectorAttribute->notEmpty() then self.MinimumVectorAttribute.FeatureName else 'null' endif + ', Max: ' + if self.MaximumVectorAttribute->notEmpty() then self.MaximumVectorAttribute.FeatureName else 'null' endif + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Range'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='VectorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='VectorConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='VectorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='VectorConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="EdgeLayer" optional="false">
        <edgeMappings name="VectorBasedConstraintToVectorBasedConstraintMinimum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.VectorRangeBasedConstraint.MinimumVectorAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Minimum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="VectorBasedConstraintToVectorBasedConstraintMaximum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.VectorRangeBasedConstraint.MaximumVectorAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Maximum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVectorBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.6"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnVectorRangeBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']/@subContainerMappings[name='VectorRangeBasedConstraintContainer']/@subNodeMappings[name='VectorRangeBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.10/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Deletion">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnVectorBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.VectorRangeBasedConstraint.MinimumVectorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.VectorRangeBasedConstraint.MaximumVectorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Vector Range" precondition="aql:self.VectorRangeBasedConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='VectorConstraintDiagram']/@defaultLayer/@containerMappings[name='VectorBasedConstraintContainer']/@subContainerMappings[name='VectorRangeBasedConstraintContainer']/@subNodeMappings[name='VectorRangeBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Range.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorRangeBasedConstraint" referenceName="VectorRangeBasedConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Vector Range Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumVectorAttribute->isEmpty() and element.MaximumVectorAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector Range">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.10/@groups.1"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.10/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="RotatorConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="RotatorBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnRotatorBasedConstraintDeleted']" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnRotatorBasedConstraintDoubleClicked']" domainClass="UGSML::RotatorBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="RotatorRangeBasedConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::RotatorBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="RotatorRangeBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnRotatorRangeBasedConstraintDoubleClicked']" domainClass="UGSML::RotatorRangeBasedConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Range (Min: ' + if self.MinimumRotatorAttribute->notEmpty() then self.MinimumRotatorAttribute.FeatureName else 'null' endif + ', Max: ' + if self.MaximumRotatorAttribute->notEmpty() then self.MaximumRotatorAttribute.FeatureName else 'null' endif + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Range'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='RotatorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='RotatorConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='RotatorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='RotatorConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="EdgeLayer" optional="false">
        <edgeMappings name="RotatorBasedConstraintToRotatorBasedConstraintMinimum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.RotatorRangeBasedConstraint.MinimumRotatorAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Minimum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="RotatorBasedConstraintToRotatorBasedConstraintMaximum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.RotatorRangeBasedConstraint.MaximumRotatorAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Maximum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnRotatorBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.7"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnRotatorRangeBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']/@subContainerMappings[name='RotatorRangeBasedConstraintContainer']/@subNodeMappings[name='RotatorRangeBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.11/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Deletion">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnRotatorBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RotatorRangeBasedConstraint.MinimumRotatorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.RotatorRangeBasedConstraint.MaximumRotatorAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Rotator Range" precondition="aql:self.RotatorRangeBasedConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer']/@subContainerMappings[name='RotatorRangeBasedConstraintContainer']/@subNodeMappings[name='RotatorRangeBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Range.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorRangeBasedConstraint" referenceName="RotatorRangeBasedConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Rotator Range Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumRotatorAttribute->isEmpty() and element.MaximumRotatorAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Rotator Range">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.11/@groups.1"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.11/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="TransformationConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="TransformationBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnTransformationBasedConstraintDeleted']" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnTransformationBasedConstraintDoubleClicked']" domainClass="UGSML::TransformationBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="TransformationRangeBasedConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::TransformationBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="TransformationRangeBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnTransformationRangeBasedConstraintDoubleClicked']" domainClass="UGSML::TransformationRangeBasedConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - Range (Min: ' + if self.MinimumTransformationAttribute->notEmpty() then self.MinimumTransformationAttribute.FeatureName else 'null' endif + ', Max: ' + if self.MaximumTransformationAttribute->notEmpty() then self.MaximumTransformationAttribute.FeatureName else 'null' endif + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Range'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='TransformationConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='TransformationConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='TransformationConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='TransformationConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="EdgeLayer" optional="false">
        <edgeMappings name="TransformationBasedConstraintToTransformationBasedConstraintMinimum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.TransformationRangeBasedConstraint.MinimumTransformationAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Minimum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="TransformationBasedConstraintToTransformationBasedConstraintMaximum" sourceMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']" targetMapping="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='RotatorConstraintDiagram']/@defaultLayer/@containerMappings[name='RotatorBasedConstraintContainer'] //@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']" targetFinderExpression="aql:self.eContainer().SingleValueConstraints->select(AttributeConstraintInstance | AttributeConstraintInstance.ConstrainedAttributeInstance = self.TransformationRangeBasedConstraint.MaximumTransformationAttribute)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="Maximum">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnTransformationBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ConstrainedAttributeInstance.FeatureName + ' Properties (Single Value Constraint)'">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.8"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnTransformationRangeBasedConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']/@subContainerMappings[name='TransformationRangeBasedConstraintContainer']/@subNodeMappings[name='TransformationRangeBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Range Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.12/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Deletion">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OnTransformationBasedConstraintDeleted">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(element)" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.TransformationRangeBasedConstraint.MinimumTransformationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMinimum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.TransformationRangeBasedConstraint.MaximumTransformationAttribute = element.ConstrainedAttributeInstance">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanDeleteValueBasedConstraint" valueExpression="aql:false"/>
                      <subModelOperations xsi:type="tool_1:Let" variableName="ElementIsUsedAsMaximum" valueExpression="aql:SingleValueConstraintInstance"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = false">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMinimum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Minimum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.21"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ElementIsUsedAsMaximum->notEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Constraint Used As Maximum">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.22"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanDeleteValueBasedConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Transformation Range" precondition="aql:self.TransformationRangeBasedConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@defaultLayer/@containerMappings[name='TransformationBasedConstraintContainer']/@subContainerMappings[name='TransformationRangeBasedConstraintContainer']/@subNodeMappings[name='TransformationRangeBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Range.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationRangeBasedConstraint" referenceName="TransformationRangeBasedConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Transformation Range Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.MinimumTransformationAttribute->isEmpty() and element.MaximumTransformationAttribute->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Transformation Range">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.12/@groups.1"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.12/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ColorConstraintDiagram" domainClass="UGSML::Game" enablePopupBars="true">
      <defaultLayer name="MainLayer">
        <containerMappings name="ColorBasedConstraintContainer" deletionDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='TransformationConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.1/@ownedTools[name='OnTransformationBasedConstraintDeleted']" domainClass="UGSML::ColorBasedConstraint" childrenPresentation="VerticalStack">
          <subContainerMappings name="ColorCustomizationBasedConstraintContainer" preconditionExpression="aql:self.Variability = UGSML::VariabilityType::Variable" semanticCandidatesExpression="aql:self" domainClass="UGSML::ColorBasedConstraint" childrenPresentation="List">
            <subNodeMappings name="ColorCustomizationBasedConstraintNode" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ColorConstraintDiagram']/@additionalLayers[name='ActionLayer']/@toolSections.0/@ownedTools[name='OnColorCustomizationConstraintDoubleClicked']" domainClass="UGSML::ColorCustomizationConstraint">
              <style xsi:type="style:SquareDescription" labelSize="11" showIcon="false" labelExpression="aql:'    - ' + self.FilterColors.FeatureName + ' (' + self.FilterType + ')  '" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="11" showIcon="false" labelExpression="aql:'  Filter'" labelAlignment="LEFT" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ColorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ColorConstraintColor2']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.2"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.ConstrainedAttributeInstance.FeatureName + ' (' + self.eContainer().SystemName + ')    '" backgroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ColorConstraintColor1']" foregroundColor="//@userColorsPalettes[name='UGSMLColors']/@entries[name='ColorConstraintColor2']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="ActionLayer" optional="false">
        <toolSections name="DoubleClick">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OnColorCustomizationConstraintDoubleClicked" mappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ColorConstraintDiagram']/@defaultLayer/@containerMappings[name='ColorBasedConstraintContainer']/@subContainerMappings[name='ColorCustomizationBasedConstraintContainer']/@subNodeMappings[name='ColorCustomizationBasedConstraintNode']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Color Filtering Properties">
                <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.FilterColors->isEmpty()">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Filter Color">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.13/@groups.1"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </buttons>
                <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.13/@groups.0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="PaletteLayer" optional="false">
        <toolSections name="Constraint Rule">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Color Filter" precondition="aql:self.ColorCustomizationConstraint->isEmpty()" nodeMappings="//@ownedViewpoints[name='UGSMLViewpoint']/@ownedRepresentations[name='ColorConstraintDiagram']/@defaultLayer/@containerMappings[name='ColorBasedConstraintContainer']/@subContainerMappings[name='ColorCustomizationBasedConstraintContainer']/@subNodeMappings[name='ColorCustomizationBasedConstraintNode']" iconPath="/UGSMLGraphicalEditor/Icons/Constraints/Filter.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ColorCustomizationConstraint" referenceName="ColorCustomizationConstraint" variableName="element">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Color Filtering Properties">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.FilterColors->isEmpty()">
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Filter Color">
                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.13/@groups.1"/>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.13/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="UGSMLGraphicalEditor.Services"/>
  </ownedViewpoints>
  <userColorsPalettes name="UGSMLColors">
    <entries xsi:type="description:UserFixedColor" red="209" green="255" blue="209" name="GameNodeColor1"/>
    <entries xsi:type="description:UserFixedColor" red="179" green="255" blue="179" name="GameNodeColor2"/>
    <entries xsi:type="description:UserFixedColor" red="234" green="255" blue="255" name="StructureContainerColor1"/>
    <entries xsi:type="description:UserFixedColor" red="208" green="255" blue="255" name="StructureContainerColor2"/>
    <entries xsi:type="description:UserFixedColor" red="213" green="213" blue="255" name="AttributeContainerColor1"/>
    <entries xsi:type="description:UserFixedColor" red="245" green="197" blue="227" name="AttributeContainerColor2"/>
    <entries xsi:type="description:UserFixedColor" red="254" green="209" blue="194" name="AttributeSystemColor1"/>
    <entries xsi:type="description:UserFixedColor" red="252" green="168" blue="139" name="AttributeSystemColor2"/>
    <entries xsi:type="description:UserFixedColor" red="180" green="255" blue="180" name="ValueConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="140" green="255" blue="140" name="ValueConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="180" blue="255" name="LetterConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="222" green="166" blue="255" name="LetterConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="150" green="200" blue="255" name="Vector2DConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="100" green="180" blue="255" name="Vector2DConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="128" name="VectorConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="249" green="249" blue="0" name="VectorConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="190" green="200" blue="255" name="RotatorConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="164" green="177" blue="255" name="RotatorConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="179" blue="102" name="TransformationConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="255" green="128" blue="64" name="TransformationConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="150" green="200" blue="255" name="ColorConstraintColor1"/>
    <entries xsi:type="description:UserFixedColor" red="100" green="180" blue="255" name="ColorConstraintColor2"/>
    <entries xsi:type="description:UserFixedColor" red="150" green="150" blue="150" name="UsedAttribute"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="UGSMLProperties">
    <categories name="Pages" documentation="This category contains all pages of the editor.">
      <pages name="UGSMLPage" labelExpression="UGSML" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.2/@groups.1 //@extensions.0/@categories.2/@groups.0 //@extensions.0/@categories.3/@groups.0 //@extensions.0/@categories.4/@groups.0 //@extensions.0/@categories.4/@groups.1 //@extensions.0/@categories.3/@groups.1 //@extensions.0/@categories.5/@groups.0 //@extensions.0/@categories.5/@groups.1 //@extensions.0/@categories.5/@groups.2 //@extensions.0/@categories.5/@groups.3 //@extensions.0/@categories.5/@groups.4 //@extensions.0/@categories.5/@groups.5 //@extensions.0/@categories.5/@groups.6 //@extensions.0/@categories.5/@groups.7 //@extensions.0/@categories.5/@groups.8 //@extensions.0/@categories.5/@groups.9 //@extensions.0/@categories.5/@groups.10 //@extensions.0/@categories.5/@groups.11 //@extensions.0/@categories.5/@groups.12 //@extensions.0/@categories.5/@groups.13 //@extensions.0/@categories.5/@groups.14 //@extensions.0/@categories.5/@groups.15 //@extensions.0/@categories.5/@groups.17 //@extensions.0/@categories.5/@groups.18 //@extensions.0/@categories.4/@groups.2 //@extensions.0/@categories.4/@groups.3 //@extensions.0/@categories.6/@groups.0 //@extensions.0/@categories.6/@groups.1 //@extensions.0/@categories.6/@groups.3 //@extensions.0/@categories.6/@groups.2 //@extensions.0/@categories.6/@groups.4 //@extensions.0/@categories.6/@groups.5 //@extensions.0/@categories.6/@groups.6 //@extensions.0/@categories.6/@groups.7 //@extensions.0/@categories.6/@groups.8 //@extensions.0/@categories.6/@groups.9 //@extensions.0/@categories.6/@groups.10 //@extensions.0/@categories.6/@groups.11 //@extensions.0/@categories.6/@groups.12 //@extensions.0/@categories.6/@groups.13 //@extensions.0/@categories.6/@groups.15 //@extensions.0/@categories.6/@groups.16 //@extensions.0/@categories.7/@groups.0 //@extensions.0/@categories.7/@groups.2 //@extensions.0/@categories.7/@groups.3 //@extensions.0/@categories.7/@groups.5 //@extensions.0/@categories.7/@groups.6 //@extensions.0/@categories.7/@groups.1 //@extensions.0/@categories.7/@groups.4 //@extensions.0/@categories.7/@groups.7 //@extensions.0/@categories.7/@groups.8 //@extensions.0/@categories.7/@groups.9 //@extensions.0/@categories.8/@groups.0 //@extensions.0/@categories.8/@groups.1 //@extensions.0/@categories.9/@groups.0 //@extensions.0/@categories.10/@groups.0 //@extensions.0/@categories.12/@groups.0 //@extensions.0/@categories.13/@groups.0 //@extensions.0/@categories.5/@groups.16"/>
    </categories>
    <categories name="BaseGroups">
      <groups name="NoTitleGroup" semanticCandidateExpression="var:self">
        <style barStyle="NO_TITLE" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </style>
      </groups>
    </categories>
    <categories name="RootGroups">
      <groups name="RootGroup" domainClass="UGSML::Root" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:LabelDescription" name="Info" labelExpression="Select/double-click an entity to edit its properties." isEnabledExpression="aql:false">
          <style labelFontSizeExpression="13">
            <labelFontFormat>bold</labelFontFormat>
          </style>
        </controls>
      </groups>
      <groups name="GameGroup" domainClass="UGSML::Game" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="GameTitle" labelExpression="Game Title:" helpExpression="The name of game." isEnabledExpression="aql:self.eClass().getEStructuralFeature('GameTitle').changeable" valueExpression="aql:self.GameTitle">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="GameTitle" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="GameVersionName" labelExpression="Game Version Name:" helpExpression="The name of current game version." isEnabledExpression="aql:self.eClass().getEStructuralFeature('GameVersionName').changeable" valueExpression="aql:self.GameVersionName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="GameVersionName" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="GameVersionNumber" labelExpression="Game Version Number:" helpExpression="The number of current game version." isEnabledExpression="aql:self.eClass().getEStructuralFeature('GameVersionNumber').changeable" valueExpression="aql:self.GameVersionNumber">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="GameVersionNumber" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="FeatureContainerGroups">
      <groups name="GameStructureContainerGroup" domainClass="UGSML::GameStructureContainer" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="GameStructureContainerCategory" labelExpression="Category Name:" helpExpression="Category name of the containing structures." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureCategory').changeable" valueExpression="aql:self.FeatureCategory">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FeatureCategory" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="GameAttributeContainerGroup" domainClass="UGSML::GameAttributeContainer" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="GameAttributeContainerCategory" labelExpression="Category Name:" helpExpression="Category name of the containing attributes." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureCategory').changeable" valueExpression="aql:self.FeatureCategory">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FeatureCategory" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
    </categories>
    <categories name="GameStructureGroups">
      <groups name="SimpleEnumStructureGroup" domainClass="UGSML::SimpleEnumStructure" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Enum Name:" helpExpression="Name of the enumeration." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(SelfContext)" iteratorName="GameStructureInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = newValue.toLower()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.4"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ListDescription" name="EnumStates" labelExpression="aql:'States (' + self.EnumStates->size() + '/256):'" helpExpression="aql:'States of the ' + self.FeatureName + ' enumeration.'" isEnabledExpression="aql:self.eClass().getEStructuralFeature('EnumStates').changeable" valueExpression="feature:EnumStates" displayExpression="aql:value.FeatureName">
          <actions labelExpression="Add New State">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.EnumStates->size() &lt; 256">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumState" referenceName="EnumStates" variableName="EnumStateInstance">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ancestors()->first().FeatureName + ' - Add New State'">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().EnumStates->excluding(self.ancestors()->first().EnumStates->last())" iteratorName="EnumStateIterator">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = EnumStateInstance.FeatureName.toLower()">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.ancestors()->first()">
                                <subModelOperations xsi:type="tool_1:Unset" featureName="EnumStates" elementExpression="aql:EnumStateInstance"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0/@controls.1/@actions.0/@initialOperation/@firstModelOperations/@cases.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                      <groups name="AddEnumStateGroup" domainClass="UGSML::EnumState" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
                        <controls xsi:type="properties:TextDescription" name="StateName" labelExpression="State Name:" helpExpression="The unique name of the new state." isEnabledExpression="aql:true" valueExpression="aql:EnumStateInstance.FeatureName">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
                              <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().EnumStates->excluding(self.ancestors()->first().EnumStates->last())" iteratorName="EnumStateIterator">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = newValue.toLower()">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.10"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:self.EnumStates->size() >= 256">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Max Limit Exceeded">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0/@controls.1/@actions.0/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="SimpleEnumMaxLimitGroup" labelExpression="aql:'You surpassed the maximum number of states for ' + self.FeatureName + ' enumeration.'" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Remove Selected States">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:selection->size() &lt; self.EnumStates->size()">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="EnumStates" elementExpression="var:selection"/>
                </cases>
                <cases conditionExpression="aql:selection->size() = self.EnumStates->size()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Minimum Constraint Violated">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0/@controls.1/@actions.1/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="SimpleEnumMinLimitGroup" labelExpression="Can't delete all states of the enumeration. Each enum must contain at least 1 state." semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Edit Selected States">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:selection->size() > 0">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' - Edit State'">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.0/@controls.1/@actions.2/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="EditEnumStateGroup" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
                    <controls xsi:type="properties:DynamicMappingForDescription" name="ForEachSelectedEnumState" iterator="EnumStateInstance" iterableExpression="aql:selection">
                      <ifs name="IfTrue" predicateExpression="aql:true">
                        <widget xsi:type="properties:TextDescription" name="StateName" labelExpression="State Name:" helpExpression="aql:'The new name of ' + EnumStateInstance.FeatureName + ' state.'" isEnabledExpression="aql:true" valueExpression="aql:EnumStateInstance.FeatureName">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:EnumStateInstance">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toLower() = EnumStateInstance.FeatureName.toLower()">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (newValue.toLower() = EnumStateInstance.FeatureName.toLower())">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:EnumStateInstance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                      <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().EnumStates" iteratorName="EnumStateIterator">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = newValue.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.10"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </widget>
                      </ifs>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="BitmaskedEnumStructureGroup" domainClass="UGSML::BitmaskedEnumStructure" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Enum Name:" helpExpression="Name of the enumeration." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(SelfContext)" iteratorName="GameStructureInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = newValue.toLower()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.6"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ListDescription" name="EnumStates" labelExpression="aql:'States (' + self.EnumStates->size() + '/32):'" helpExpression="aql:'States of the ' + self.FeatureName + ' enumeration.'" isEnabledExpression="aql:self.eClass().getEStructuralFeature('EnumStates').changeable" valueExpression="feature:EnumStates" displayExpression="aql:value.FeatureName">
          <actions labelExpression="Add New State">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:self.EnumStates->size() &lt; 32">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::EnumState" referenceName="EnumStates" variableName="EnumStateInstance">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.ancestors()->first().FeatureName + ' - Add New State'">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().EnumStates->excluding(self.ancestors()->first().EnumStates->last())" iteratorName="EnumStateIterator">
                            <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = EnumStateInstance.FeatureName.toLower()">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.ancestors()->first()">
                                <subModelOperations xsi:type="tool_1:Unset" featureName="EnumStates" elementExpression="aql:EnumStateInstance"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1/@controls.1/@actions.0/@initialOperation/@firstModelOperations/@cases.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                      <groups name="AddEnumStateGroup" domainClass="UGSML::EnumState" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
                        <controls xsi:type="properties:TextDescription" name="StateName" labelExpression="State Name:" helpExpression="The unique name of the new state." isEnabledExpression="aql:true" valueExpression="aql:EnumStateInstance.FeatureName">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
                              <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().EnumStates->excluding(self.ancestors()->first().EnumStates->last())" iteratorName="EnumStateIterator">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = newValue.toLower()">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.10"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:self.EnumStates->size() >= 32">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Max Limit Exceeded">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1/@controls.1/@actions.0/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="SimpleEnumMaxLimitGroup" labelExpression="aql:'You surpassed the maximum number of states for ' + self.FeatureName + ' enumeration.'" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Remove Selected States">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:selection->size() &lt; self.EnumStates->size()">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="EnumStates" elementExpression="var:selection"/>
                </cases>
                <cases conditionExpression="aql:selection->size() = self.EnumStates->size()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Min Constraint Violated">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1/@controls.1/@actions.1/@initialOperation/@firstModelOperations/@cases.1/@subModelOperations.0/@groups.0"/>
                    <groups name="BitmaskedEnumMinLimitGroup" labelExpression="Can't delete all states of the enumeration. Each enum must contain at least 1 state." semanticCandidateExpression="var:self">
                      <style fontSizeExpression="9" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Edit Selected States">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:selection->size() > 0">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="aql:self.FeatureName + ' - Edit State'">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.1/@controls.1/@actions.2/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="EditEnumStateGroup" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
                    <controls xsi:type="properties:DynamicMappingForDescription" name="ForEachSelectedEnumState" iterator="EnumStateInstance" iterableExpression="aql:selection">
                      <ifs name="IfTrue" predicateExpression="aql:true">
                        <widget xsi:type="properties:TextDescription" name="StateName" labelExpression="State Name:" helpExpression="aql:'The new name of ' + EnumStateInstance.FeatureName + ' state.'" isEnabledExpression="aql:true" valueExpression="aql:EnumStateInstance.FeatureName">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:EnumStateInstance">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toLower() = EnumStateInstance.FeatureName.toLower()">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (newValue.toLower() = EnumStateInstance.FeatureName.toLower())">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:EnumStateInstance">
                                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
                                    <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                                      <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().EnumStates" iteratorName="EnumStateIterator">
                                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = newValue.toLower()">
                                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                                          <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                                          <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.10"/>
                                        </subModelOperations>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </firstModelOperations>
                          </initialOperation>
                        </widget>
                      </ifs>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="DataBasedStructureGroup" domainClass="UGSML::DataBasedStructure" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Enum Name:" helpExpression="Name of the enumeration." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().GameFeatureContainers" iteratorName="GameFeatureContainerInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:GameFeatureContainerInstance.GameStructures->excluding(SelfContext)" iteratorName="GameStructureInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameStructureInstance.FeatureName.toLower() = newValue.toLower()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.8"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="EnumStateGroup" domainClass="UGSML::EnumState" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="StateName" labelExpression="State Name:" helpExpression="aql:'The new name of ' + self.FeatureName + ' state.'" isEnabledExpression="aql:true" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfState" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().EnumStates" iteratorName="EnumStateIterator">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (SelfState.FeatureName.toLower() = newValue.toLower())">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:EnumStateIterator.FeatureName.toLower() = newValue.toLower()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.4/@groups.10"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="DuplicateSimpleEnumNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::SimpleEnumStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateSimpleEnumNameGroupV2" labelExpression="aql:'The name ' + self.FeatureName + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::SimpleEnumStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateBitmaskedEnumNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::BitmaskedEnumStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateBitmaskedEnumNameGroupV2" labelExpression="aql:'The name ' + self.FeatureName + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::BitmaskedEnumStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateDataBasedStructureNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::DataBasedStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateDataBasedStructureNameGroupV2" labelExpression="aql:'The name ' + self.FeatureName + ' is already taken by another structure, please enter another name.'" domainClass="UGSML::DataBasedStructure" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateEnumStateNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another state, please enter another name.'" domainClass="UGSML::EnumState" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateEnumStateNameGroupV2" labelExpression="aql:'The name ' + element.FeatureName + ' is already taken by another state, please enter another name.'" domainClass="UGSML::EnumState" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="GameAttributeGroups">
      <groups name="DecimalBasedAttributeGroup" domainClass="UGSML::DecimalBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="IntegerBasedAttributeGroup" domainClass="UGSML::IntegerBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="BooleanBasedAttributeGroup" domainClass="UGSML::BooleanBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="DefaultValue" labelExpression="Default Value" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="CharacterBasedAttributeGroup" domainClass="UGSML::CharacterBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute. Characters and symbols are only supported. If you want to have a number, please make an attribute of type &quot;Integer&quot;." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="NameBasedAttributeGroup" domainClass="UGSML::NameBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="StringBasedAttributeGroup" domainClass="UGSML::StringBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="TextBasedAttributeGroup" domainClass="UGSML::TextBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="DefaultValue" labelExpression="Default Value:" helpExpression="The default value of attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DefaultValue').changeable" valueExpression="aql:self.DefaultValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="Vector2DBasedAttributeGroup" domainClass="UGSML::Vector2DBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="X" labelExpression="Default X:" helpExpression="Default X value of the 2D vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('X').changeable" valueExpression="aql:self.X">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="X" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Y" labelExpression="Default Y:" helpExpression="Default Y value of the 2D vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Y').changeable" valueExpression="aql:self.Y">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Y" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="VectorBasedAttributeGroup" domainClass="UGSML::VectorBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="X" labelExpression="Default X:" helpExpression="Default X value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('X').changeable" valueExpression="aql:self.X">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="X" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Y" labelExpression="Default Y:" helpExpression="Default Y value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Y').changeable" valueExpression="aql:self.Y">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Y" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Z" labelExpression="Default Z:" helpExpression="Default Z value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Z').changeable" valueExpression="aql:self.Z">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Z" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="RotatorBasedAttributeGroup" domainClass="UGSML::RotatorBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Roll" labelExpression="Default Roll:" helpExpression="Default Roll value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Roll').changeable" valueExpression="aql:self.Roll">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Roll" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Pitch" labelExpression="Default Pitch:" helpExpression="Default Pitch value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Pitch').changeable" valueExpression="aql:self.Pitch">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Pitch" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="Yaw" labelExpression="Default Yaw:" helpExpression="Default Yaw value of the vector." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Yaw').changeable" valueExpression="aql:self.Yaw">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Yaw" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="TransformationBasedAttributeGroup" domainClass="UGSML::TransformationBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="TranslationX" labelExpression="Default Translation (X):" helpExpression="Default Translation value of X vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Translation.X').changeable" valueExpression="aql:self.Translation.X">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Translation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="X" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="TranslationY" labelExpression="Default Translation (Y):" helpExpression="Default Translation value of Y vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Translation.Y').changeable" valueExpression="aql:self.Translation.Y">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Translation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Y" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="TranslationZ" labelExpression="Default Translation (Z):" helpExpression="Default Translation value of Z vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Translation.Z').changeable" valueExpression="aql:self.Translation.Z">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Translation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Z" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="RotationRoll" labelExpression="Default Rotation (Roll):" helpExpression="Default Rotation value of Roll vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Rotation.Roll').changeable" valueExpression="aql:self.Rotation.Roll">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Rotation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Roll" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="RotationPitch" labelExpression="Default Rotation (Pitch):" helpExpression="Default Rotation value of Pitch vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Rotation.Pitch').changeable" valueExpression="aql:self.Rotation.Pitch">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Rotation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Pitch" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="RotationYaw" labelExpression="Default Rotation (Yaw):" helpExpression="Default Rotation value of Yaw vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Rotation.Yaw').changeable" valueExpression="aql:self.Rotation.Yaw">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Rotation">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Yaw" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ScaleX" labelExpression="Default Scale (X):" helpExpression="Default Scale value of X vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Scale.X').changeable" valueExpression="aql:self.Scale3D.X">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Scale3D">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="X" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ScaleY" labelExpression="Default Scale (Y):" helpExpression="Default Scale value of Y vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Scale.Y').changeable" valueExpression="aql:self.Scale3D.Y">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Scale3D">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Y" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ScaleZ" labelExpression="Default Scale (Z):" helpExpression="Default Scale value of Z vector of the transformation." isEnabledExpression="aql:self.eClass().getEStructuralFeature('Scale.Z').changeable" valueExpression="aql:self.Scale3D.Z">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.Scale3D">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="Z" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="ColorBasedAttributeGroup" domainClass="UGSML::ColorBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="R" labelExpression="Default R:" helpExpression="Default R value of the color." isEnabledExpression="aql:self.eClass().getEStructuralFeature('R').changeable" valueExpression="aql:self.R">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toInteger() > -1 and newValue.toInteger() &lt; 256">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="R" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="G" labelExpression="Default G:" helpExpression="Default G value of the color." isEnabledExpression="aql:self.eClass().getEStructuralFeature('G').changeable" valueExpression="aql:self.G">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toInteger() > -1 and newValue.toInteger() &lt; 256">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="G" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="B" labelExpression="Default B:" helpExpression="Default B value of the color." isEnabledExpression="aql:self.eClass().getEStructuralFeature('B').changeable" valueExpression="aql:self.B">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toInteger() > -1 and newValue.toInteger() &lt; 256">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="B" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="A" labelExpression="Default A:" helpExpression="Default A value of the color." isEnabledExpression="aql:self.eClass().getEStructuralFeature('A').changeable" valueExpression="aql:self.A">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toInteger() > -1 and newValue.toInteger() &lt; 256">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="A" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="TextureBasedAttributeGroup" domainClass="UGSML::TextureBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="ModelBasedAttributeGroup" domainClass="UGSML::ModelBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="ParticleBasedAttributeGroup" domainClass="UGSML::ParticleBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="AudioBasedAttributeGroup" domainClass="UGSML::AudioBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="MaterialBasedAttributeGroup" domainClass="UGSML::MaterialBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="EnumBasedAttributeGroup" domainClass="UGSML::EnumBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="EnumType" labelExpression="Enum Type:" helpExpression="The enumeration type of the enum." isEnabledExpression="aql:self.eClass().getEStructuralFeature('EnumType').changeable" valueExpression="feature:EnumType" candidatesExpression="aql:if (self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)) then (self.ancestors()->first().ancestors()->first().GameFeatureContainers.GameStructures->filter(UGSML::EnumerationBasedStructure)) else (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameStructures->filter(UGSML::EnumerationBasedStructure)) endif" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="EnumType" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="StructureBasedAttributeGroup" domainClass="UGSML::StructureBasedAttribute" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="FeatureName" labelExpression="Attribute Name:" helpExpression="Name of the attribute." isEnabledExpression="aql:self.eClass().getEStructuralFeature('FeatureName').changeable" valueExpression="aql:self.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.FeatureName">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.ancestors()->first().ancestors()->first().GameFeatureContainers" iteratorName="GameAttributeContainerInstance">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:GameAttributeContainerInstance.GameAttributes" iteratorName="GameAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(GameAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eContainer().oclIsTypeOf(UGSML::DataBasedStructure)">
                    <subModelOperations xsi:type="tool_1:Let" variableName="DataStructureInstance" valueExpression="aql:self.eContainer()">
                      <subModelOperations xsi:type="tool_1:For" expression="aql:DataStructureInstance.StructureAttributes" iteratorName="StructureAttributeInstance">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:(StructureAttributeInstance.FeatureName.toLower() = newValue.toLower()) and (not (newValue.toLower() = DefaultName.toLower()))">
                          <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="FeatureName" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.20"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="DataType" labelExpression="Data Type:" helpExpression="The data type of the structure." isEnabledExpression="aql:self.eClass().getEStructuralFeature('DataType').changeable" valueExpression="feature:DataType" candidatesExpression="aql:if (self.eContainer().oclIsTypeOf(UGSML::GameAttributeContainer)) then (self.ancestors()->first().ancestors()->first().GameFeatureContainers.GameStructures->filter(UGSML::DataBasedStructure)) else (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameStructures->filter(UGSML::DataBasedStructure)) endif" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
              <subModelOperations xsi:type="tool_1:Let" variableName="CanSetDataType" valueExpression="aql:true">
                <subModelOperations xsi:type="tool_1:For" expression="aql:newValue.StructureAttributes" iteratorName="DataTypeAttribute">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DataTypeAttribute.DataType = self.eContainer()">
                      <subModelOperations xsi:type="tool_1:Let" variableName="CanSetDataType" valueExpression="aql:false"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanSetDataType = true">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="DataType" valueExpression="var:newValue"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:CanSetDataType = false">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Recursive Structure Reference">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.5/@groups.23"/>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" iterator="GameSystemInstance" iterableExpression="aql:self.eContainer().eContainer().GameSystems">
          <ifs predicateExpression="aql:(GameSystemInstance.SingleValueConstraints->any(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty() or (GameSystemInstance.ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = self))->notEmpty()">
            <widget xsi:type="properties:LabelDescription" name="System" labelExpression="Used By:" isEnabledExpression="aql:false" displayExpression="aql:GameSystemInstance.SystemName">
              <style>
                <labelBackgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelForegroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFontFormat>bold</labelFontFormat>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <fontFormat>bold</fontFormat>
              </style>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="DuplicateAttributeNameGroupV2" labelExpression="aql:'The name ' + self.FeatureName + ' is already taken by another attribute, please enter another name.'" domainClass="UGSML::GameAttribute" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateAttributeNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another attribute, please enter another name.'" domainClass="UGSML::GameAttribute" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidEnumTypeGroup" labelExpression="No &quot;Enum Type&quot; is selected." domainClass="UGSML::EnumBasedAttribute" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidDataTypeGroup" labelExpression="No &quot;Data Type&quot; is selected." domainClass="UGSML::StructureBasedAttribute" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="RecursiveStructureReferenceGroup" labelExpression="The structure you are trying to reference, has an structure attribute of current structure. This behavior is not valid." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="AttributeSystemGroups">
      <groups name="AttributeSystemGroup" domainClass="UGSML::AttributeSystem" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="SystemName" labelExpression="System Name:" helpExpression="The unique name of the system. Only names that begin with an English alphabet and have digits in the remainder of the name are permitted." isEnabledExpression="aql:self.eClass().getEStructuralFeature('SystemName').changeable" valueExpression="aql:self.SystemName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.IsValidStringForName(newValue)">
              <subModelOperations xsi:type="tool_1:Let" variableName="DefaultName" valueExpression="aql:self.SystemName">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (newValue.toLower() = DefaultName.toLower())">
                  <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:false">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().GameSystems" iteratorName="GameSystem">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:GameSystem.SystemName.toLower() = newValue.toLower()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateName" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = false">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="SystemName" valueExpression="var:newValue"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateName = true">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Duplicate Name">
                        <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                        <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.17"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="ParentAttributeSystem" labelExpression="Parrent Attribute System" helpExpression="Select the parent system that this one inherits its features." isEnabledExpression="aql:true" valueExpression="feature:ParentAttributeSystem" candidatesExpression="aql:(((self.eContainer().GameSystems->select(GameSystemInstance | GameSystemInstance.oclIsTypeOf(UGSML::AttributeSystem)))->excluding(self))->reject(AttributeSystemInstance | AttributeSystemInstance.ParentAttributeSystem = self))->including(null)" candidateDisplayExpression="aql:candidate.SystemName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="ParentAttributeSystem" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ArrayConstraintGroup" domainClass="UGSML::ArrayConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to make it an array." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:(((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty())" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfArrayConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfArrayConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfArrayConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ValueBasedConstraintGroup" domainClass="UGSML::ValueBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::ValueBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="BaseOrRangeConstraint"/>
                            <subModelOperations xsi:type="tool_1:Unset" featureName="RegenerationConstraint"/>
                            <subModelOperations xsi:type="tool_1:Unset" featureName="DirectDependencyConstraint"/>
                            <subModelOperations xsi:type="tool_1:For" expression="aql:self.DistortionConstraints" iteratorName="DistortionConstraintInstance">
                              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DistortionConstraintInstance.oclIsTypeOf(UGSML::SetterDistortionConstraint)">
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                                  <subModelOperations xsi:type="tool_1:Unset" featureName="DistortionConstraints" elementExpression="aql:DistortionConstraintInstance"/>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.2/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantValueGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="BooleanBasedConstraintGroup" domainClass="UGSML::BooleanBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::BooleanBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="LetterBasedConstraintGroup" domainClass="UGSML::LetterBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::LetterBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="LetterLengthConstraint"/>
                            <subModelOperations xsi:type="tool_1:Unset" featureName="LetterCustomizationConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.4/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantLetterGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="Vector2DBasedConstraintGroup" domainClass="UGSML::Vector2DBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::Vector2DBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="Vector2DRangeBasedConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.5/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantVector2DGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="VectorBasedConstraintGroup" domainClass="UGSML::VectorBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::VectorBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="VectorRangeBasedConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.6/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantVector2DGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="RotatorBasedConstraintGroup" domainClass="UGSML::RotatorBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::RotatorBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="RotatorRangeBasedConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.7/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantVector2DGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="TransformationBasedConstraintGroup" domainClass="UGSML::TransformationBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::TransformationBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="TransformationRangeBasedConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.8/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantVector2DGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ColorBasedConstraintGroup" domainClass="UGSML::ColorBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::ColorBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Constant'">
                <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Warning">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Unset" featureName="ColorCustomizationConstraint"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.9/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="ChangeVariabilityToConstantVector2DGroup" labelExpression="Converting a variable to constant will remove all dynamic references that it has. Are you sure you want to continue?" semanticCandidateExpression="var:self">
                      <style fontSizeExpression="10" toggleStyle="NONE">
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                      </style>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Variable'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="TextureBasedConstraintGroup" domainClass="UGSML::TextureBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::TextureBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ModelBasedConstraintGroup" domainClass="UGSML::ModelBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::ModelBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ParticleBasedConstraintGroup" domainClass="UGSML::ParticleBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::ParticleBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="AudioBasedConstraintGroup" domainClass="UGSML::AudioBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::AudioBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="MaterialBasedConstraintGroup" domainClass="UGSML::MaterialBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::MaterialBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="EnumBasedConstraintGroup" domainClass="UGSML::EnumBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::EnumBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="StructureBasedConstraintGroup" domainClass="UGSML::StructureBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ConstrainedAttribute" labelExpression="Constrained Attribute:" helpExpression="Select the attribute that you want to define constraints on it." isEnabledExpression="aql:self.eClass().getEStructuralFeature('ConstrainedAttributeInstance').changeable" valueExpression="feature:ConstrainedAttributeInstance" candidatesExpression="aql:((((self.eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().ArrayConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance)))->reject(AttributeInstance | (self.eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->includes(AttributeInstance))->including(self.ConstrainedAttributeInstance))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.ArrayConstraints->select(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->reject(AttributeInstance | (self.eContainer().ParentAttributeSystem.SingleValueConstraints->select(SingleValueConstraintInstance | SingleValueConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->notEmpty()))->filter(UGSML::StructureBasedAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:Let" variableName="SelectedAttributeInstance" valueExpression="aql:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="SelfSingleConstraint" valueExpression="aql:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer()" iteratorName="AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.ArrayConstraints->excluding(SelfSingleConstraint)" iteratorName="ArrayConstraintInstance">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ArrayConstraintInstance.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:For" expression="aql:AttributeSystemInstance.SingleValueConstraints->excluding(SelfSingleConstraint)" iteratorName="SingleValueConstraint">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraint.ConstrainedAttributeInstance = newValue">
                        <subModelOperations xsi:type="tool_1:Let" variableName="DuplicateInstance" valueExpression="aql:true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = false">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:DuplicateInstance = true">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Same Attribute Instance">
                      <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                      <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.6/@groups.19"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="Variability" labelExpression="Variability Type:" helpExpression="Select the variability type of the attribute. Variable allows the attribute to be dynamic and change in game. Constant will use the specified default value of the attribute and this value can't change in game." isEnabledExpression="aql:true" valueExpression="aql:UGSML::VariabilityType.getEEnumLiteral(self.Variability.toString())" candidatesExpression="aql:UGSML::VariabilityType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Variability" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="DuplicateAttributeSystemNameGroup" labelExpression="aql:'The name ' + newValue + ' is already taken by another system, please enter another name.'" domainClass="UGSML::AttributeSystem" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="DuplicateAttributeSystemNameGroupV2" labelExpression="aql:'The name ' + AttributeSystemInstance.SystemName + ' is already taken by another system, please enter another name.'" domainClass="UGSML::AttributeSystem" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="SameAttributeInstanceGroup" labelExpression="aql:'The attribute ' + newValue.FeatureName + ' already has a constraint. Please select another instance.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidConstraintGroup" labelExpression="No &quot;Constrained Attribute&quot; is selected." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="NoConstraintRuleGroup" labelExpression="This type of constraint has no constraint rule." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="ValueBasedConstraintGroups">
      <groups name="BaseValueConstraintGroup" domainClass="UGSML::BaseValueConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:TextDescription" name="DefaultBaseValue" labelExpression="Default Base Value:" helpExpression="Default base value of the attribute. You can control this later in the unreal editor." isEnabledExpression="aql:true" valueExpression="aql:self.DefaultBaseValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DefaultBaseValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ValueRangeBasedConstraintGroup" domainClass="UGSML::ValueRangeBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="Initializer" labelExpression="Initialization Mode:" helpExpression="aql:'Select the initialization mode of the attribute. Minimum will set the default value of the attribute to minimum when game starts. Maximum will set the default value of the attribute to maximum when game starts.'" isEnabledExpression="aql:true" valueExpression="aql:UGSML::InitializationMode.getEEnumLiteral(self.Initializer.toString())" candidatesExpression="aql:UGSML::InitializationMode.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Minimum'">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumValue->isEmpty()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Minimum Found">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.30"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumValue->notEmpty()">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Initializer" valueExpression="aql:newValue.instance"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Maximum'">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumValue->isEmpty()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="No Maximum Found">
                    <buttons labelExpression="Close" default="true" closeDialogOnClick="true" rollbackChangesOnClose="true"/>
                    <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.7/@groups.31"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumValue->notEmpty()">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Initializer" valueExpression="aql:newValue.instance"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue.toString() = 'Default'">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Initializer" valueExpression="aql:newValue.instance"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="LimitationMode" labelExpression="Limitation Mode:" helpExpression="aql:'Select the limitation mode of the attribute.'" isEnabledExpression="aql:true" valueExpression="aql:UGSML::AdditionLimit.getEEnumLiteral(self.Limit.toString())" candidatesExpression="aql:UGSML::AdditionLimit.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Limit" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="MinimumValueConstraintGroup" domainClass="UGSML::MinimumValue" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumValue" labelExpression="Minimum Attribute:" helpExpression="aql:'Select the minimum attribute that ' + self.eContainer().eContainer().ConstrainedAttributeInstance.FeatureName +' can not surpass.'" isEnabledExpression="aql:true" valueExpression="feature:MinimumAttribute" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ValueBasedAttribute)->excluding(self.eContainer().eContainer().ConstrainedAttributeInstance)->excluding(self.eContainer().MaximumValue.MaximumAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="MinimumAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="RemapValue" labelExpression="Remap Attribute" helpExpression="True, if the attribute should remap to new minimum value when minimum value changes. False otherwise." isEnabledExpression="aql:true" valueExpression="feature:RemapValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="RemapValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="MaximumValueConstraintGroup" domainClass="UGSML::MaximumValue" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MaximumValue" labelExpression="Maximum Attribute:" helpExpression="aql:'Select the maximum attribute that ' + self.eContainer().eContainer().ConstrainedAttributeInstance.FeatureName +' can not surpass.'" isEnabledExpression="aql:true" valueExpression="feature:MaximumAttribute" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ValueBasedAttribute)->excluding(self.eContainer().eContainer().ConstrainedAttributeInstance)->excluding(self.eContainer().MinimumValue.MinimumAttribute)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="MaximumAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="RemapValue" labelExpression="Remap Attribute" helpExpression="True, if the attribute should remap to new maximum value when maximum value changes. False otherwise." isEnabledExpression="aql:true" valueExpression="feature:RemapValue">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="RemapValue" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ConversionDependencyConstraintGroup" domainClass="UGSML::ConversionDependencyConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="NextAttributeInChain" labelExpression="Next Attribute In Chain:" helpExpression="Select the next attribute in the chain that changes, when this attribute hits its maximum." isEnabledExpression="aql:true" valueExpression="feature:NextAttributeInChain" candidatesExpression="aql:(self.eContainer().eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ValueBasedAttribute)->including(null))->excluding(self.eContainer().eContainer().ConstrainedAttributeInstance)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="NextAttributeInChain" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not (newValue = null)">
                <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer().eContainer()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="ConversionChain" labelExpression="Conversion Chain:" helpExpression="Select the attributes that make the chain for conversion (including current attribute)." isEnabledExpression="aql:true" referenceNameExpression="ConversionChain" referenceOwnerExpression="aql:self"/>
        <controls xsi:type="properties:TextDescription" name="ConversionUnitToBase" labelExpression="Conversion Unit To Base:" helpExpression="The amount of the attribute that is equal to the first attribute in the conversion chain." isEnabledExpression="aql:true" valueExpression="feature:ConversionUnitToBase">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="ConversionUnitToBase" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ConversionRate" labelExpression="Conversion Rate:" helpExpression="The amount that will be converted to." isEnabledExpression="aql:true" valueExpression="feature:ConversionRate">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="ConversionRate" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="MarginOfErrorConstraintGroup" domainClass="UGSML::MarginOfErrorConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MOEAttribute" labelExpression="MOE Attribute:" helpExpression="aql:'Select the MOE attribute that ' + self.eContainer().ConstrainedAttributeInstance.FeatureName +' uses.'" isEnabledExpression="aql:true" valueExpression="feature:MOEAttribute" candidatesExpression="aql:(self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ValueBasedAttribute)->excluding(self.eContainer().ConstrainedAttributeInstance))->select(AttributeInstance | (self.eContainer().eContainer().ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->isEmpty())" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="MOEAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="RegenerationConstraintGroup" domainClass="UGSML::RegenerationConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="RegenerationAttribute" labelExpression="Regeneration Attribute:" helpExpression="aql:'Select the regeneration attribute that ' + self.eContainer().ConstrainedAttributeInstance.FeatureName +' uses.'" isEnabledExpression="aql:true" valueExpression="feature:RegenerationAttribute" candidatesExpression="aql:(self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ValueBasedAttribute)->excluding(self.eContainer().ConstrainedAttributeInstance))->select(AttributeInstance | (self.eContainer().eContainer().ArrayConstraints->any(ArrayConstraintInstance | ArrayConstraintInstance.ConstrainedAttributeInstance = AttributeInstance))->isEmpty())" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="RegenerationAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="DirectDependencyConstraintGroup" domainClass="UGSML::DirectDependencyConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="DependentAttribute" labelExpression="Dependent Attributes:" helpExpression="Select attributes that this one depends on (excluding self)." isEnabledExpression="aql:true" referenceNameExpression="DependentAttributes" referenceOwnerExpression="aql:self"/>
        <controls xsi:type="properties:TextDescription" name="DependencyFormula" labelExpression="Dependency Formula:" helpExpression="Write down the dependency formula that is used to calculate attribute dependency. Please refer to the legend section to write a correct formula." isEnabledExpression="aql:true" valueExpression="feature:DependencyFormula">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DependencyFormula" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="Legend" labelExpression="Legend:" helpExpression="Please use the instruction provided in this legend to write the dependency formula." isEnabledExpression="aql:false" lineCount="32" valueExpression="aql:'1- For any dependent attribute (including current attribute) that you want to use in the formula, you must write GetTotal&quot;AttributeName&quot;().\n\t\t* For example, if you want to use ' + self.eContainer().ConstrainedAttributeInstance.FeatureName + ' in the formula, you must write &quot;GetTotal' +self.eContainer().ConstrainedAttributeInstance.FeatureName + '()&quot; to access it.\n2- For arithmetic operations, use &quot;+&quot; for addition, &quot;-&quot; for subtraction, &quot;*&quot; for multiplication, and &quot;/&quot; for division.\n\t\t* For example, you can write &quot;GetTotal' + self.eContainer().ConstrainedAttributeInstance.FeatureName + '() * 2&quot; to multiply your attribute by 2.\n3- If you want to use decimal numbers in your formula, write the letter &quot;f&quot; at the end of the number.\n\t\t* For example, write &quot;5.37f&quot; instead of &quot;5.37&quot;.\n4- You can use the provided functions in the &quot;Math Libraries&quot; section to write a complex formula.\n\t\t* This is a real world example of a complex formula (based on https://liquipedia.net/dota2/Armor): &quot;1.0f - (0.052f * GetTotalArmor()) / (0.9f + 0.048f * FMath::Abs(GetTotalArmor()))&quot;\n5- PEMDAS rule is applied for arithmetic orders.\n6- You can right conditional states using &quot;? :&quot;.\n\t\t- For example, &quot;GetTotalLevel() > 5 ? 2 : 3&quot; means, if Level is more that 5, we get 2, otherwise we get 3.\n7- Math Libraries:\n\t\t- Clamp: &quot;FMath::Clamp(Value, Min, Max)&quot;\n\t\t- Divide And Round Down: &quot;FMath::DivideAndRoundDown(Dividend, Divisor)&quot;\n\t\t- Divide And Round Nearest: &quot;FMath::DivideAndRoundNearest(Dividend, Divisor)&quot;\n\t\t- Divide And Round Up: &quot;FMath::DivideAndRoundUp(Dividend, Divisor)&quot;\n\t\t- Ceil: &quot;FMath::CeilToFloat(Value)&quot;\n\t\t- Floor: &quot;FMath::Floor(Value)&quot;\n\t\t- Absolute: &quot;FMath::Abs(Value)&quot;\n\t\t- Power: &quot;FMath::Pow(Value, Power)&quot;\n\t\t- Minimum: &quot;FMath::Min(Value1, Value2)&quot;\n\t\t- Maximum: &quot;FMath::Max(Value1, Value2)&quot;\n\t\t- Logarithm (Base 2): &quot;FMath::Log2(Value)&quot;\n\t\t- Logarithm (Base e): &quot;FMath::Loge(Value)&quot;\n\t\t- Logarithm (Base X): &quot;FMath::LogX(Base, Value)&quot;\n\t\t- Sine: &quot;FMath::Sin(Value)&quot;\n\t\t- Cosine: &quot;FMath::Cos(Value)&quot;\n\t\t- Tangent: &quot;FMath::Tan(Value)&quot;'">
          <style fontSizeExpression="10">
            <fontFormat>bold</fontFormat>
          </style>
        </controls>
      </groups>
      <groups name="GetterDistortionConstraintGroup" domainClass="UGSML::GetterDistortionConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="DistortionAttribute" labelExpression="Distortion Attribute:" helpExpression="aql:'The attribute that is used to distort ' + self.eContainer().ConstrainedAttributeInstance +'.'" isEnabledExpression="aql:true" valueExpression="feature:DistortionAttribute" candidatesExpression="aql:(((((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().DistortionConstraints.DistortionAttribute))->includes(AttributeInstance)))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(self.DistortionAttribute))->excluding(null))->filter(UGSML::DecimalBasedAttribute))->union(((((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().DistortionConstraints.DistortionAttribute))->includes(AttributeInstance)))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(self.DistortionAttribute))->excluding(null))->filter(UGSML::IntegerBasedAttribute))" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DistortionAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="DistortionMode" labelExpression="Distortion Mode:" helpExpression="aql:'Select the distortion mode that the distortion attribute applies to ' + self.eContainer().ConstrainedAttributeInstance" isEnabledExpression="aql:true" valueExpression="aql:UGSML::ArithmeticOperations.getEEnumLiteral(self.DistortionMode.toString())" candidatesExpression="aql:UGSML::ArithmeticOperations.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DistortionMode" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="SetterDistortionConstraintGroup" domainClass="UGSML::SetterDistortionConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="DistortionAttribute" labelExpression="Distortion Attribute:" helpExpression="aql:'The attribute that is used to distort ' + self.eContainer().ConstrainedAttributeInstance +'.'" isEnabledExpression="aql:true" valueExpression="feature:DistortionAttribute" candidatesExpression="aql:(((((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().DistortionConstraints.DistortionAttribute))->includes(AttributeInstance)))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(self.DistortionAttribute))->excluding(null))->filter(UGSML::DecimalBasedAttribute))->union(((((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->reject(AttributeInstance | (self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->intersection(self.eContainer().DistortionConstraints.DistortionAttribute))->includes(AttributeInstance)))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(self.DistortionAttribute))->excluding(null))->filter(UGSML::IntegerBasedAttribute))" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DistortionAttribute" valueExpression="var:newValue">
              <subModelOperations xsi:type="tool_1:Let" variableName="AttributeSystemInstance" valueExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:not AttributeSystemInstance.SingleValueConstraints.ConstrainedAttributeInstance->includes(newValue)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:AttributeSystemInstance">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::ValueBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="DistortionMode" labelExpression="Distortion Mode:" helpExpression="aql:'Select the distortion mode that the distortion attribute applies to ' + self.eContainer().ConstrainedAttributeInstance" isEnabledExpression="aql:true" valueExpression="aql:UGSML::ArithmeticOperations.getEEnumLiteral(self.DistortionMode.toString())" candidatesExpression="aql:UGSML::ArithmeticOperations.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="DistortionMode" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidMinimumGroup" labelExpression="&quot;Minimum Attribute&quot; can't be empty." domainClass="UGSML::MinimumValue" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidMaximumGroup" labelExpression="&quot;Maximum Attribute&quot; can't be empty." domainClass="UGSML::MaximumValue" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidMarginOfErrorGroup" labelExpression="&quot;MOE Attribute&quot; can't be empty." domainClass="UGSML::MarginOfErrorConstraint" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidRegenerationGroup" labelExpression="&quot;Regeneration Attribute&quot; can't be empty." domainClass="UGSML::RegenerationConstraint" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="NoDependentAttributeGroup" labelExpression="&quot;Dependent Attributes&quot; can't be empty." domainClass="UGSML::DependencyConstraint" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="SelfDependencyGroup" labelExpression="Self dependency is not allowed. One of the &quot;Dependent Attributes&quot; is referencing current attribute." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidDistortionGroup" labelExpression="&quot;Distortion Attribute&quot; can't be empty." domainClass="UGSML::DistortionConstraint" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsMinimumLengthGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as minimum length of &quot;' + ElementIsUsedAsMinLength.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsMinLength.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsMaximumLengthGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as maximum length of &quot;' + ElementIsUsedAsMaxLength.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsMaxLength.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsFilterStringGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as filter string in &quot;' + ElementIsUsedAsFilterString.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsFilterString.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsFilterColorGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as filter color in &quot;' + ElementIsUsedAsFilterColor.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsFilterColor.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsMinimumGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as minimum value in &quot;' + ElementIsUsedAsMinimum.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsMinimum.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsMaximumGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as maximum value in &quot;' + ElementIsUsedAsMaximum.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsMaximum.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsNextConversionAttributeGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as the next conversion attribute of &quot;' + ElementIsUsedAsNextConversionAttribute.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsNextConversionAttribute.eContainer().SystemName + ')&quot; constraint.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedInConversionChainGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced in the conversion chain of &quot;' + ElementIsUsedInConversionChain.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedInConversionChain.eContainer().SystemName + ')&quot; constraint.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsMarginOfErrorGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as margin of error in &quot;' + ElementIsUsedAsMarginOfError.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsMarginOfError.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsRegenerationGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as regeneration attribute in &quot;' + ElementIsUsedAsRegeneration.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsRegeneration.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsDependencyGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as dependent attribute in &quot;' + ElementIsUsedAsDependency.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsDependency.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="ElementIsUsedAsDistortionGroup" labelExpression="aql:'The constraint that you are trying to delete is referenced as distortion attribute in &quot;' + ElementIsUsedAsDistortion.ConstrainedAttributeInstance.FeatureName + ' (' + ElementIsUsedAsDistortion.eContainer().SystemName + ')&quot; constraint. Please remove the reference and try again.'" semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="RangeMustHaveMinOrMaxGroup" labelExpression="A value with &quot;range constraint&quot; must at least have minimum or maximum. If you want to remove &quot;range constraint&quot;, click on &quot;Remove Range Constraint&quot; button." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="NoMinimumFoundGroup" labelExpression="You can only initialize to minimum if minimum is defined for the attribute." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="NoMaximumFoundGroup" labelExpression="You can only initialize to maximum if maximum is defined for the attribute." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="LetterBasedConstraintGroups">
      <groups name="LetterLengthConstraintGroup" domainClass="UGSML::LetterLengthConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumLength" labelExpression="Minimum Length Attribute:" helpExpression="Select the attribute that determines the minimum length of the string (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MinimumLengthAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::IntegerBasedAttribute)->reject(AttributeInstance | self.MaximumLengthAttribute = AttributeInstance))->intersection(self.eContainer().eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumLengthAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumLengthAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumLengthAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumLengthAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumLengthAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Letter Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.2"/>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="MaximumLength" labelExpression="Maximum Length Attribute:" helpExpression="Select the attribute that determines the maximum length of the string (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MaximumLengthAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::IntegerBasedAttribute)->reject(AttributeInstance | self.MinimumLengthAttribute = AttributeInstance))->intersection(self.eContainer().eContainer().SingleValueConstraints.ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumLengthAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumLengthAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumLengthAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumLengthAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumLengthAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Letter Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.8/@groups.2"/>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="LetterCustomizationConstraintGroup" domainClass="UGSML::LetterCustomizationConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="LetterCustomization" labelExpression="Filter Strings:" helpExpression="Select the filter string that is used on the attribute (only arrays of strings can be used as filters)." isEnabledExpression="aql:true" valueExpression="feature:FilterStrings" candidatesExpression="aql:(self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::StringBasedAttribute))->intersection(self.eContainer().eContainer().ArrayConstraints.ConstrainedAttributeInstance)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FilterStrings" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="FilteringType" labelExpression="Filter Type:" helpExpression="Select the filtering type for the constraint to behaive on." isEnabledExpression="aql:true" valueExpression="aql:UGSML::FilteringType.getEEnumLiteral(self.FilterType.toString())" candidatesExpression="aql:UGSML::FilteringType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FilterType" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidLetterRangeGroup" labelExpression="A letter attribute with &quot;range constraint&quot; must at least have minimum or maximum length." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
      <groups name="InvalidLetterFilterStringGroup" labelExpression="&quot;Filter Strings&quot; can't be empty." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="Vector2DBasedConstraintGroups">
      <groups name="Vector2DRangeBasedConstraintGroup" domainClass="UGSML::Vector2DRangeBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumVector2D" labelExpression="Minimum Vector2D Attribute:" helpExpression="Select the attribute that determines the minimum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MinimumVector2DAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::Vector2DBasedAttribute)->reject(AttributeInstance | self.MaximumVector2DAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVector2DAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumVector2DAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVector2DAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumVector2DAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVector2DAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector2D Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.9/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MinimumVector2DAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="MaximumVector2D" labelExpression="Maximum Vector2D Attribute:" helpExpression="Select the attribute that determines the maximum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MaximumVector2DAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::Vector2DBasedAttribute)->reject(AttributeInstance | self.MinimumVector2DAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVector2DAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumVector2DAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVector2DAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumVector2DAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVector2DAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector2D Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.9/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MaximumVector2DAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::Vector2DBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="LimitationMode" labelExpression="Limitation Model:" helpExpression="Select the limitation mode of the attribute." isEnabledExpression="aql:true" valueExpression="aql:UGSML::AdditionLimit.getEEnumLiteral(self.Limit.toString())" candidatesExpression="aql:UGSML::AdditionLimit.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Limit" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidVector2DRangeGroup" labelExpression="A vector2D attribute with &quot;range constraint&quot; must at least have minimum or maximum value." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="VectorBasedConstraintGroups">
      <groups name="VectorRangeBasedConstraintGroup" domainClass="UGSML::VectorRangeBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumVector" labelExpression="Minimum Vector Attribute:" helpExpression="Select the attribute that determines the minimum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MinimumVectorAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::VectorBasedAttribute)->reject(AttributeInstance | self.MaximumVectorAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVectorAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumVectorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVectorAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumVectorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumVectorAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.10/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MinimumVectorAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="MaximumVector" labelExpression="Maximum Vector Attribute:" helpExpression="Select the attribute that determines the maximum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MaximumVectorAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::VectorBasedAttribute)->reject(AttributeInstance | self.MinimumVectorAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVectorAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumVectorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVectorAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumVectorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumVectorAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Vector Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.10/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MaximumVectorAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::VectorBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="LimitationMode" labelExpression="Limitation Model:" helpExpression="Select the limitation mode of the attribute." isEnabledExpression="aql:true" valueExpression="aql:UGSML::AdditionLimit.getEEnumLiteral(self.Limit.toString())" candidatesExpression="aql:UGSML::AdditionLimit.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Limit" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidVectorRangeGroup" labelExpression="A vector attribute with &quot;range constraint&quot; must at least have minimum or maximum value." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="RotatorBasedConstraintGroups">
      <groups name="RotatorRangeBasedConstraintGroup" domainClass="UGSML::RotatorRangeBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumRotator" labelExpression="Minimum Rotator Attribute:" helpExpression="Select the attribute that determines the minimum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MinimumRotatorAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::RotatorBasedAttribute)->reject(AttributeInstance | self.MaximumRotatorAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumRotatorAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumRotatorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumRotatorAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumRotatorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumRotatorAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Rotator Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.11/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MinimumRotatorAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="MaximumRotator" labelExpression="Maximum Rotator Attribute:" helpExpression="Select the attribute that determines the maximum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MaximumRotatorAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::RotatorBasedAttribute)->reject(AttributeInstance | self.MinimumRotatorAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumRotatorAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumRotatorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumRotatorAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumRotatorAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumRotatorAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Rotator Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.11/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MaximumRotatorAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::RotatorBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="LimitationMode" labelExpression="Limitation Model:" helpExpression="Select the limitation mode of the attribute." isEnabledExpression="aql:true" valueExpression="aql:UGSML::AdditionLimit.getEEnumLiteral(self.Limit.toString())" candidatesExpression="aql:UGSML::AdditionLimit.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Limit" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidRotatorRangeGroup" labelExpression="A rotator attribute with &quot;range constraint&quot; must at least have minimum or maximum value." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="TransformationBasedConstraintGroups">
      <groups name="TransformationRangeBasedConstraintGroup" domainClass="UGSML::TransformationRangeBasedConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="MinimumTransformation" labelExpression="Minimum Transformation Attribute:" helpExpression="Select the attribute that determines the minimum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MinimumTransformationAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::TransformationBasedAttribute)->reject(AttributeInstance | self.MaximumTransformationAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumTransformationAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumTransformationAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumTransformationAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MinimumTransformationAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MaximumTransformationAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Transformation Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.12/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MinimumTransformationAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="MaximumTransformation" labelExpression="Maximum Transformation Attribute:" helpExpression="Select the attribute that determines the maximum value of the attribute (only attributes that are constrained by current attribute system are available)." isEnabledExpression="aql:true" valueExpression="feature:MaximumTransformationAttribute" candidatesExpression="aql:((self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::TransformationBasedAttribute)->reject(AttributeInstance | self.MinimumTransformationAttribute = AttributeInstance))->excluding(self.eContainer().ConstrainedAttributeInstance))->including(null)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumTransformationAttribute->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumTransformationAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumTransformationAttribute->isEmpty() and newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="MaximumTransformationAttribute" valueExpression="var:newValue"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.MinimumTransformationAttribute->isEmpty() and newValue->isEmpty()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Transformation Range">
                  <buttons labelExpression="Close" default="true" closeDialogOnClick="true"/>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.12/@groups.1"/>
                </subModelOperations>
              </subModelOperations>
              <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue->notEmpty()">
                <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:true">
                  <subModelOperations xsi:type="tool_1:Let" variableName="SelfContext" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:self.eContainer().eContainer().SingleValueConstraints" iteratorName="SingleValueConstraintInstance">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:SelfContext">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:SingleValueConstraintInstance.ConstrainedAttributeInstance = self.MaximumTransformationAttribute">
                        <subModelOperations xsi:type="tool_1:Let" variableName="ShouldCreateConstraint" valueExpression="aql:false"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:ShouldCreateConstraint = true">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="UGSML::TransformationBasedConstraint" referenceName="SingleValueConstraints" variableName="SingleValueConstraintInstance">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ConstrainedAttributeInstance" valueExpression="var:newValue"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="LimitationMode" labelExpression="Limitation Model:" helpExpression="Select the limitation mode of the attribute." isEnabledExpression="aql:true" valueExpression="aql:UGSML::AdditionLimit.getEEnumLiteral(self.Limit.toString())" candidatesExpression="aql:UGSML::AdditionLimit.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="Limit" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidTransformationRangeGroup" labelExpression="A transformation attribute with &quot;range constraint&quot; must at least have minimum or maximum value." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
    <categories name="ColorBasedConstraintGroups">
      <groups name="ColorCustomizationConstraintGroup" domainClass="UGSML::ColorCustomizationConstraint" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.1/@groups.0">
        <controls xsi:type="properties:SelectDescription" name="ColorCustomization" labelExpression="Filter Colors:" helpExpression="Select the filter color that is used on the attribute (only arrays of colors can be used as filters)." isEnabledExpression="aql:true" valueExpression="feature:FilterColors" candidatesExpression="aql:(self.eContainer().eContainer().eContainer().GameFeatureContainers.GameAttributes->filter(UGSML::ColorBasedAttribute))->intersection(self.eContainer().eContainer().ArrayConstraints.ConstrainedAttributeInstance)" candidateDisplayExpression="aql:candidate.FeatureName">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FilterColors" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="FilteringType" labelExpression="Filter Type:" helpExpression="Select the filtering type for the constraint to behaive on." isEnabledExpression="aql:true" valueExpression="aql:UGSML::FilteringType.getEEnumLiteral(self.FilterType.toString())" candidatesExpression="aql:UGSML::FilteringType.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="FilterType" valueExpression="aql:newValue.instance"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="InvalidColorFilterGroup" labelExpression="&quot;Filter Colors&quot; can't be empty." semanticCandidateExpression="var:self">
        <style fontSizeExpression="9" toggleStyle="NONE">
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </style>
      </groups>
    </categories>
  </extensions>
</description:Group>
